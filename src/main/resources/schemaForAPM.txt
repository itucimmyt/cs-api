type Query {findServiceType(id:ID!):ServiceType
findServiceTypeList( page: PageInput, sort:SortInput,filters:[FilterInput]):ServiceTypeConnection
findService(id:ID!):Service
findServiceList( page: PageInput, sort:SortInput,filters:[FilterInput]):ServiceConnection
findServiceProvider(id:ID!):ServiceProvider
findServiceProviderList( page: PageInput, sort:SortInput,filters:[FilterInput]):ServiceProviderConnection
}
type Mutation {createServiceType(ServiceTypeTo:ServiceTypeInput!):ServiceType
modifyServiceType(ServiceTypeTo:ServiceTypeInput!):ServiceType
deleteServiceType(idservicetype:Int!):Int
createService(ServiceTo:ServiceInput!):Service
modifyService(ServiceTo:ServiceInput!):Service
deleteService(idservice:Int!):Int
createServiceProvider(ServiceProviderTo:ServiceProviderInput!):ServiceProvider
modifyServiceProvider(ServiceProviderTo:ServiceProviderInput!):ServiceProvider
deleteServiceProvider(idserviceprovider:Int!):Int
}

type ServiceTypeConnection {
totalPages: Int
totalElements: Int
numberOfElements: Int
size: Int
number: Int
content: [ServiceType]
}
#Type of services, such as Genotyping (G), Phytosanitary (P), seed quality (G), pathology including MLN screening
type ServiceType {
#Name of the service_type
name: String
#Code identifier for the service type

code: String
#Description of the Service type
description: String
tenant: Int
id: ID!
serviceprovider:[ServiceProvider]
}
type ServiceConnection {
totalPages: Int
totalElements: Int
numberOfElements: Int
size: Int
number: Int
content: [Service]
}
#Service or product name, corresponding to a specific vendor catalog product or service identifier
type Service {
#Name of the Service

name: String
#Description of the Service

description: String
#
code: String
tenant: Int
id: ID!
}
type ServiceProviderConnection {
totalPages: Int
totalElements: Int
numberOfElements: Int
size: Int
number: Int
content: [ServiceProvider]
}
#Internal service unit that triage, and/or process clients' service requests.
type ServiceProvider {
#Code identifier for the Service Provider
code: String
#Name of the Service Provider
name: String
tenant: Int
id: ID!
servicetypes:[ServiceType]
}

input ServiceTypeInput {
#Name of the service_type
name: String
#Code identifier for the service type

code: String
#Description of the Service type
description: String
tenant: Int
id: ID!
serviceprovider:[ServiceProviderInput]
}
input ServiceInput {
#Name of the Service

name: String
#Description of the Service

description: String
#
code: String
tenant: Int
id: ID!
}
input ServiceProviderInput {
#Code identifier for the Service Provider
code: String
#Name of the Service Provider
name: String
tenant: Int
id: ID!
}

input FilterInput { 
mod: FilterMod = EQ
col: String!
val: String!
}

input SortInput {
col: String!
mod: SortMod = ASC
}

input PageInput {
number: Int! = 0
size: Int!=1
}

enum FilterMod {
EQ
LK
}

enum SortMod {
ASC
DES
}

scalar Date

