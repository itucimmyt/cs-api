///////////////////////////////////////////////////////////
//  MutationResolver.java
//  Macromedia ActionScript Implementation of the Class MutationResolver
//  Generated by Enterprise Architect
//  Created on:      02-May-2021 6:19:52 AM
//  Original author: EBRIONES
///////////////////////////////////////////////////////////

package org.ebs.graphql.mutation;

import org.ebs.services.to.Input.AlertInput;
import org.ebs.services.AlertService;
import org.ebs.services.to.AlertRuleTo;
import org.ebs.services.to.Input.AlertRuleInput;
import org.ebs.services.AlertRuleService;
import org.ebs.services.to.AttributesTo;
import org.ebs.services.to.Input.AttributesInput;
import org.ebs.services.AttributesService;
import org.ebs.services.to.AuditLogsTo;
import org.ebs.services.to.Input.AuditLogsInput;
import org.ebs.services.AuditLogsService;
import org.springframework.stereotype.Component;
import org.springframework.validation.annotation.Validated;
import org.springframework.beans.factory.annotation.Autowired;
import org.ebs.services.to.TranslationTo;
import org.ebs.services.to.Input.TranslationInput;
import org.ebs.services.TranslationService;
import org.ebs.services.to.TypeTo;
import org.ebs.services.to.DomainTo;
import org.ebs.services.to.Input.DomainInput;
import org.ebs.services.DomainService;
import org.ebs.services.to.CustomerTo;
import org.ebs.services.to.Input.CustomerInput;
import org.ebs.services.CustomerService;
import org.ebs.services.to.DelegationTo;
import org.ebs.services.to.Input.DelegationInput;
import org.ebs.services.DelegationService;
import org.ebs.services.to.EmailTemplateTo;
import org.ebs.services.to.Input.EmailTemplateInput;
import org.ebs.services.EmailTemplateService;
import org.ebs.services.to.EntityReferenceTo;
import org.ebs.services.to.Input.EntityReferenceInput;
import org.ebs.services.EntityReferenceService;
import org.ebs.services.to.FormulaTypeTo;
import org.ebs.services.to.Input.FormulaTypeInput;
import org.ebs.services.FormulaTypeService;
import org.ebs.services.to.HtmlTagTo;
import org.ebs.services.to.Input.HtmlTagInput;
import org.ebs.services.HtmlTagService;
import org.ebs.services.to.InstanceTo;
import org.ebs.services.to.Input.InstanceInput;
import org.ebs.services.InstanceService;
import org.ebs.services.to.LanguageTo;
import org.ebs.services.to.Input.LanguageInput;
import org.ebs.services.LanguageService;
import org.ebs.services.to.MessageTo;
import org.ebs.services.to.Input.MessageInput;
import org.ebs.services.MessageService;
import org.ebs.services.to.ProductTo;
import org.ebs.services.to.Input.ProductInput;
import org.ebs.services.ProductService;
import org.ebs.services.to.NumberSequenceRuleTo;
import org.ebs.services.to.Input.NumberSequenceRuleInput;
import org.ebs.services.NumberSequenceRuleService;
import org.ebs.services.to.OrganizationTo;
import org.ebs.services.to.Input.OrganizationInput;
import org.ebs.services.OrganizationService;
import org.ebs.services.to.PersonTo;
import org.ebs.services.to.Input.PersonInput;
import org.ebs.services.PersonService;
import org.ebs.services.to.PersonStatusTo;
import org.ebs.services.to.Input.PersonStatusInput;
import org.ebs.services.PersonStatusService;
import org.ebs.services.to.PreferenceTo;
import org.ebs.services.to.Input.PreferenceInput;
import org.ebs.services.PreferenceService;
import org.ebs.services.to.ProcessTo;
import org.ebs.services.to.Input.ProcessInput;
import org.ebs.services.ProcessService;
import org.ebs.services.to.RoleTo;
import org.ebs.services.to.Input.RoleInput;
import org.ebs.services.RoleService;
import org.ebs.services.to.SegmentTo;
import org.ebs.services.to.Input.SegmentInput;
import org.ebs.services.SegmentService;
import org.ebs.services.to.StyleThemeTo;
import org.ebs.services.to.Input.StyleThemeInput;
import org.ebs.services.StyleThemeService;
import org.ebs.services.to.FunctionalUnitTo;
import org.ebs.services.to.Input.FunctionalUnitInput;
import org.ebs.services.FunctionalUnitService;
import org.ebs.services.to.TenantTo;
import org.ebs.services.to.Input.TenantInput;
import org.ebs.services.TenantService;
import org.ebs.services.to.Input.TypeInput;
import org.ebs.services.TypeService;
import org.ebs.services.to.UserTo;
import org.ebs.services.to.Input.UserInput;
import org.ebs.services.UserService;
import org.ebs.services.to.NumberSequenceRuleSegmentTo;
import org.ebs.services.to.Input.NumberSequenceRuleSegmentInput;
import org.ebs.services.NumberSequenceRuleSegmentService;
import org.ebs.services.to.BreedingCycleTo;
import org.ebs.services.to.Input.BreedingCycleInput;
import org.ebs.services.BreedingCycleService;
import org.ebs.services.to.CropTo;
import org.ebs.services.to.Input.CropInput;
import org.ebs.services.CropService;
import org.ebs.services.to.DomainInstanceTo;
import org.ebs.services.to.Input.DomainInstanceInput;
import org.ebs.services.DomainInstanceService;
import org.ebs.services.to.ProgramTo;
import org.ebs.services.to.Input.ProgramInput;
import org.ebs.services.ProgramService;
import org.ebs.services.to.ProjectTo;
import org.ebs.services.to.Input.ProjectInput;
import org.ebs.services.ProjectService;
import org.ebs.services.to.ReportTo;
import org.ebs.services.to.Input.ReportInput;
import org.ebs.services.ReportService;
import org.ebs.services.to.AddressTo;
import org.ebs.services.to.Input.AddressInput;
import org.ebs.services.AddressService;
import org.ebs.services.to.ProductFunctionTo;
import org.ebs.services.to.Input.ProductFunctionInput;
import org.ebs.services.ProductFunctionService;
import org.ebs.services.to.AlertTo;
import com.coxautodev.graphql.tools.GraphQLMutationResolver;

/**
 * @author EBRIONES
 * @version 1.0
 * @created 02-May-2021 6:19:52 AM
 */
@Component @Validated
public class MutationResolver implements GraphQLMutationResolver {

	private TranslationService translationService;
	private TypeService typeService;
	private UserService userService;
	private NumberSequenceRuleSegmentService numberSequenceRuleSegmentService;
	private BreedingCycleService breedingCycleService;
	private CropService cropService;
	private DomainInstanceService domainInstanceService;
	private ProgramService programService;
	private ProjectService projectService;
	private ReportService reportService;
	private AddressService addressService;
	private ProductFunctionService productFunctionService;
	private AlertService alertService;
	private AlertRuleService alertRuleService;
	private AttributesService attributesService;
	private AuditLogsService auditLogsService;
	private DomainService domainService;
	private CustomerService customerService;
	private DelegationService delegationService;
	private EmailTemplateService emailTemplateService;
	private EntityReferenceService entityReferenceService;
	private FormulaTypeService formulaTypeService;
	private HtmlTagService htmlTagService;
	private InstanceService instanceService;
	private LanguageService languageService;
	private MessageService messageService;
	private ProductService productService;
	private NumberSequenceRuleService numberSequenceRuleService;
	private OrganizationService organizationService;
	private PersonService personService;
	private PersonStatusService personStatusService;
	private PreferenceService preferenceService;
	private ProcessService processService;
	private RoleService roleService;
	private SegmentService segmentService;
	private StyleThemeService styleThemeService;
	private FunctionalUnitService functionalUnitService;
	private TenantService tenantService;

	/**
	 * 
	 * @param addressInput
	 */
	public AddressTo createAddress(AddressInput addressInput){
		return addressService.createAddress(addressInput);
	}

	/**
	 * 
	 * @param alertInput
	 */
	public AlertTo createAlert(AlertInput alertInput){
		return alertService.createAlert(alertInput);
	}

	/**
	 * 
	 * @param alertRuleInput
	 */
	public AlertRuleTo createAlertRule(AlertRuleInput alertRuleInput){
		return alertRuleService.createAlertRule(alertRuleInput);
	}

	/**
	 * 
	 * @param attributesInput
	 */
	public AttributesTo createAttributes(AttributesInput attributesInput){
		return attributesService.createAttributes(attributesInput);
	}

	/**
	 * 
	 * @param auditLogsInput
	 */
	public AuditLogsTo createAuditLogs(AuditLogsInput auditLogsInput){
		return auditLogsService.createAuditLogs(auditLogsInput);
	}

	/**
	 * 
	 * @param breedingCycleInput
	 */
	public BreedingCycleTo createBreedingCycle(BreedingCycleInput breedingCycleInput){
		return breedingCycleService.createBreedingCycle(breedingCycleInput);
	}

	/**
	 * 
	 * @param cropInput
	 */
	public CropTo createCrop(CropInput cropInput){
		return cropService.createCrop(cropInput);
	}

	/**
	 * 
	 * @param customerInput
	 */
	public CustomerTo createCustomer(CustomerInput customerInput){
		return customerService.createCustomer(customerInput);
	}

	/**
	 * 
	 * @param delegationInput
	 */
	public DelegationTo createDelegation(DelegationInput delegationInput){
		return delegationService.createDelegation(delegationInput);
	}

	/**
	 * 
	 * @param domainInput
	 */
	public DomainTo createDomain(DomainInput domainInput){
		return domainService.createDomain(domainInput);
	}

	/**
	 * 
	 * @param domainInstanceInput
	 */
	public DomainInstanceTo createDomainInstance(DomainInstanceInput domainInstanceInput){
		return domainInstanceService.createDomainInstance(domainInstanceInput);
	}

	/**
	 * 
	 * @param emailTemplateInput
	 */
	public EmailTemplateTo createEmailTemplate(EmailTemplateInput emailTemplateInput){
		return emailTemplateService.createEmailTemplate(emailTemplateInput);
	}

	/**
	 * 
	 * @param entityReferenceInput
	 */
	public EntityReferenceTo createEntityReference(EntityReferenceInput entityReferenceInput){
		return entityReferenceService.createEntityReference(entityReferenceInput);
	}

	/**
	 * 
	 * @param formulaTypeInput
	 */
	public FormulaTypeTo createFormulaType(FormulaTypeInput formulaTypeInput){
		return formulaTypeService.createFormulaType(formulaTypeInput);
	}

	/**
	 * 
	 * @param functionalUnitInput
	 */
	public FunctionalUnitTo createFunctionalUnit(FunctionalUnitInput functionalUnitInput){
		return functionalUnitService.createFunctionalUnit(functionalUnitInput);
	}

	/**
	 * 
	 * @param htmlTagInput
	 */
	public HtmlTagTo createHtmlTag(HtmlTagInput htmlTagInput){
		return htmlTagService.createHtmlTag(htmlTagInput);
	}

	/**
	 * 
	 * @param instanceInput
	 */
	public InstanceTo createInstance(InstanceInput instanceInput){
		return instanceService.createInstance(instanceInput);
	}

	/**
	 * 
	 * @param languageInput
	 */
	public LanguageTo createLanguage(LanguageInput languageInput){
		return languageService.createLanguage(languageInput);
	}

	/**
	 * 
	 * @param messageInput
	 */
	public MessageTo createMessage(MessageInput messageInput){
		return messageService.createMessage(messageInput);
	}

	/**
	 * 
	 * @param numberSequenceRuleInput
	 */
	public NumberSequenceRuleTo createNumberSequenceRule(NumberSequenceRuleInput numberSequenceRuleInput){
		return numberSequenceRuleService.createNumberSequenceRule(numberSequenceRuleInput);
	}

	/**
	 * 
	 * @param numberSequenceRuleSegmentInput
	 */
	public NumberSequenceRuleSegmentTo createNumberSequenceRuleSegment(NumberSequenceRuleSegmentInput numberSequenceRuleSegmentInput){
		return numberSequenceRuleSegmentService.createNumberSequenceRuleSegment(numberSequenceRuleSegmentInput);
	}

	/**
	 * 
	 * @param organizationInput
	 */
	public OrganizationTo createOrganization(OrganizationInput organizationInput){
		return organizationService.createOrganization(organizationInput);
	}

	/**
	 * 
	 * @param personInput
	 */
	public PersonTo createPerson(PersonInput personInput){
		return personService.createPerson(personInput);
	}

	/**
	 * 
	 * @param personStatusInput
	 */
	public PersonStatusTo createPersonStatus(PersonStatusInput personStatusInput){
		return personStatusService.createPersonStatus(personStatusInput);
	}

	/**
	 * 
	 * @param preferenceInput
	 */
	public PreferenceTo createPreference(PreferenceInput preferenceInput){
		return preferenceService.createPreference(preferenceInput);
	}

	/**
	 * 
	 * @param processInput
	 */
	public ProcessTo createProcess(ProcessInput processInput){
		return processService.createProcess(processInput);
	}

	/**
	 * 
	 * @param productInput
	 */
	public ProductTo createProduct(ProductInput productInput){
		return productService.createProduct(productInput);
	}

	/**
	 * 
	 * @param productFunctionInput
	 */
	public ProductFunctionTo createProductFunction(ProductFunctionInput productFunctionInput){
		return productFunctionService.createProductFunction(productFunctionInput);
	}

	/**
	 * 
	 * @param programInput
	 */
	public ProgramTo createProgram(ProgramInput programInput){
		return programService.createProgram(programInput);
	}

	/**
	 * 
	 * @param projectInput
	 */
	public ProjectTo createProject(ProjectInput projectInput){
		return projectService.createProject(projectInput);
	}

	/**
	 * 
	 * @param reportInput
	 */
	public ReportTo createReport(ReportInput reportInput){
		return reportService.createReport(reportInput);
	}

	/**
	 * 
	 * @param roleInput
	 */
	public RoleTo createRole(RoleInput roleInput){
		return roleService.createRole(roleInput);
	}

	/**
	 * 
	 * @param segmentInput
	 */
	public SegmentTo createSegment(SegmentInput segmentInput){
		return segmentService.createSegment(segmentInput);
	}

	/**
	 * 
	 * @param styleThemeInput
	 */
	public StyleThemeTo createStyleTheme(StyleThemeInput styleThemeInput){
		return styleThemeService.createStyleTheme(styleThemeInput);
	}

	/**
	 * 
	 * @param tenantInput
	 */
	public TenantTo createTenant(TenantInput tenantInput){
		return tenantService.createTenant(tenantInput);
	}

	/**
	 * 
	 * @param translationInput
	 */
	public TranslationTo createTranslation(TranslationInput translationInput){
		return translationService.createTranslation(translationInput);
	}

	/**
	 * 
	 * @param typeInput
	 */
	public TypeTo createType(TypeInput typeInput){
		return typeService.createType(typeInput);
	}

	/**
	 * 
	 * @param userInput
	 */
	public UserTo createUser(UserInput userInput){
		return userService.createUser(userInput);
	}

	/**
	 * 
	 * @param idaddress
	 */
	public int deleteAddress(int idaddress){
		return addressService.deleteAddress(idaddress);
	}

	/**
	 * 
	 * @param idalert
	 */
	public int deleteAlert(int idalert){
		return alertService.deleteAlert(idalert);
	}

	/**
	 * 
	 * @param idalertRule
	 */
	public int deleteAlertRule(int idalertRule){
		return alertRuleService.deleteAlertRule(idalertRule);
	}

	/**
	 * 
	 * @param idattributes
	 */
	public int deleteAttributes(int idattributes){
		return attributesService.deleteAttributes(idattributes);
	}

	/**
	 * 
	 * @param idauditLogs
	 */
	public int deleteAuditLogs(int idauditLogs){
		return auditLogsService.deleteAuditLogs(idauditLogs);
	}

	/**
	 * 
	 * @param idbreedingCycle
	 */
	public int deleteBreedingCycle(int idbreedingCycle){
		return breedingCycleService.deleteBreedingCycle(idbreedingCycle);
	}

	/**
	 * 
	 * @param idcrop
	 */
	public int deleteCrop(int idcrop){
		return cropService.deleteCrop(idcrop);
	}

	/**
	 * 
	 * @param idcustomer
	 */
	public int deleteCustomer(int idcustomer){
		return customerService.deleteCustomer(idcustomer);
	}

	/**
	 * 
	 * @param iddelegation
	 */
	public int deleteDelegation(int iddelegation){
		return delegationService.deleteDelegation(iddelegation);
	}

	/**
	 * 
	 * @param iddomain
	 */
	public int deleteDomain(int iddomain){
		return domainService.deleteDomain(iddomain);
	}

	/**
	 * 
	 * @param iddomainInstance
	 */
	public int deleteDomainInstance(int iddomainInstance){
		return domainInstanceService.deleteDomainInstance(iddomainInstance);
	}

	/**
	 * 
	 * @param idemailTemplate
	 */
	public int deleteEmailTemplate(int idemailTemplate){
		return emailTemplateService.deleteEmailTemplate(idemailTemplate);
	}

	/**
	 * 
	 * @param identityReference
	 */
	public int deleteEntityReference(int identityReference){
		return entityReferenceService.deleteEntityReference(identityReference);
	}

	/**
	 * 
	 * @param idformulaType
	 */
	public int deleteFormulaType(int idformulaType){
		return formulaTypeService.deleteFormulaType(idformulaType);
	}

	/**
	 * 
	 * @param idfunctionalUnit
	 */
	public int deleteFunctionalUnit(int idfunctionalUnit){
		return functionalUnitService.deleteFunctionalUnit(idfunctionalUnit);
	}

	/**
	 * 
	 * @param idhtmlTag
	 */
	public int deleteHtmlTag(int idhtmlTag){
		return htmlTagService.deleteHtmlTag(idhtmlTag);
	}

	/**
	 * 
	 * @param idinstance
	 */
	public int deleteInstance(int idinstance){
		return instanceService.deleteInstance(idinstance);
	}

	/**
	 * 
	 * @param idlanguage
	 */
	public int deleteLanguage(int idlanguage){
		return languageService.deleteLanguage(idlanguage);
	}

	/**
	 * 
	 * @param idmessage
	 */
	public int deleteMessage(int idmessage){
		return messageService.deleteMessage(idmessage);
	}

	/**
	 * 
	 * @param idnumberSequenceRule
	 */
	public int deleteNumberSequenceRule(int idnumberSequenceRule){
		return numberSequenceRuleService.deleteNumberSequenceRule(idnumberSequenceRule);
	}

	/**
	 * 
	 * @param idnumberSequenceRuleSegment
	 */
	public int deleteNumberSequenceRuleSegment(int idnumberSequenceRuleSegment){
		return numberSequenceRuleSegmentService.deleteNumberSequenceRuleSegment(idnumberSequenceRuleSegment);
	}

	/**
	 * 
	 * @param idorganization
	 */
	public int deleteOrganization(int idorganization){
		return organizationService.deleteOrganization(idorganization);
	}

	/**
	 * 
	 * @param idperson
	 */
	public int deletePerson(int idperson){
		return personService.deletePerson(idperson);
	}

	/**
	 * 
	 * @param idpersonStatus
	 */
	public int deletePersonStatus(int idpersonStatus){
		return personStatusService.deletePersonStatus(idpersonStatus);
	}

	/**
	 * 
	 * @param idpreference
	 */
	public int deletePreference(int idpreference){
		return preferenceService.deletePreference(idpreference);
	}

	/**
	 * 
	 * @param idprocess
	 */
	public int deleteProcess(int idprocess){
		return processService.deleteProcess(idprocess);
	}

	/**
	 * 
	 * @param idproduct
	 */
	public int deleteProduct(int idproduct){
		return productService.deleteProduct(idproduct);
	}

	/**
	 * 
	 * @param idproductFunction
	 */
	public int deleteProductFunction(int idproductFunction){
		return productFunctionService.deleteProductFunction(idproductFunction);
	}

	/**
	 * 
	 * @param idprogram
	 */
	public int deleteProgram(int idprogram){
		return programService.deleteProgram(idprogram);
	}

	/**
	 * 
	 * @param idproject
	 */
	public int deleteProject(int idproject){
		return projectService.deleteProject(idproject);
	}

	/**
	 * 
	 * @param idreport
	 */
	public int deleteReport(int idreport){
		return reportService.deleteReport(idreport);
	}

	/**
	 * 
	 * @param idrole
	 */
	public int deleteRole(int idrole){
		return roleService.deleteRole(idrole);
	}

	/**
	 * 
	 * @param idsegment
	 */
	public int deleteSegment(int idsegment){
		return segmentService.deleteSegment(idsegment);
	}

	/**
	 * 
	 * @param idstyleTheme
	 */
	public int deleteStyleTheme(int idstyleTheme){
		return styleThemeService.deleteStyleTheme(idstyleTheme);
	}

	/**
	 * 
	 * @param idtenant
	 */
	public int deleteTenant(int idtenant){
		return tenantService.deleteTenant(idtenant);
	}

	/**
	 * 
	 * @param idtranslation
	 */
	public int deleteTranslation(int idtranslation){
		return translationService.deleteTranslation(idtranslation);
	}

	/**
	 * 
	 * @param idtype
	 */
	public int deleteType(int idtype){
		return typeService.deleteType(idtype);
	}

	/**
	 * 
	 * @param iduser
	 */
	public int deleteUser(int iduser){
		return userService.deleteUser(iduser);
	}

	/**
	 * 
	 * @param addressInput
	 */
	public AddressTo modifyAddress(AddressInput addressInput){
		return addressService.modifyAddress(addressInput);
	}

	/**
	 * 
	 * @param alertInput
	 */
	public AlertTo modifyAlert(AlertInput alertInput){
		return alertService.modifyAlert(alertInput);
	}

	/**
	 * 
	 * @param alertRuleInput
	 */
	public AlertRuleTo modifyAlertRule(AlertRuleInput alertRuleInput){
		return alertRuleService.modifyAlertRule(alertRuleInput);
	}

	/**
	 * 
	 * @param attributesInput
	 */
	public AttributesTo modifyAttributes(AttributesInput attributesInput){
		return attributesService.modifyAttributes(attributesInput);
	}

	/**
	 * 
	 * @param auditLogsInput
	 */
	public AuditLogsTo modifyAuditLogs(AuditLogsInput auditLogsInput){
		return auditLogsService.modifyAuditLogs(auditLogsInput);
	}

	/**
	 * 
	 * @param breedingCycleInput
	 */
	public BreedingCycleTo modifyBreedingCycle(BreedingCycleInput breedingCycleInput){
		return breedingCycleService.modifyBreedingCycle(breedingCycleInput);
	}

	/**
	 * 
	 * @param cropInput
	 */
	public CropTo modifyCrop(CropInput cropInput){
		return cropService.modifyCrop(cropInput);
	}

	/**
	 * 
	 * @param customerInput
	 */
	public CustomerTo modifyCustomer(CustomerInput customerInput){
		return customerService.modifyCustomer(customerInput);
	}

	/**
	 * 
	 * @param delegationInput
	 */
	public DelegationTo modifyDelegation(DelegationInput delegationInput){
		return delegationService.modifyDelegation(delegationInput);
	}

	/**
	 * 
	 * @param domainInput
	 */
	public DomainTo modifyDomain(DomainInput domainInput){
		return domainService.modifyDomain(domainInput);
	}

	/**
	 * 
	 * @param domainInstanceInput
	 */
	public DomainInstanceTo modifyDomainInstance(DomainInstanceInput domainInstanceInput){
		return domainInstanceService.modifyDomainInstance(domainInstanceInput);
	}

	/**
	 * 
	 * @param emailTemplateInput
	 */
	public EmailTemplateTo modifyEmailTemplate(EmailTemplateInput emailTemplateInput){
		return emailTemplateService.modifyEmailTemplate(emailTemplateInput);
	}

	/**
	 * 
	 * @param entityReferenceInput
	 */
	public EntityReferenceTo modifyEntityReference(EntityReferenceInput entityReferenceInput){
		return entityReferenceService.modifyEntityReference(entityReferenceInput);
	}

	/**
	 * 
	 * @param formulaTypeInput
	 */
	public FormulaTypeTo modifyFormulaType(FormulaTypeInput formulaTypeInput){
		return formulaTypeService.modifyFormulaType(formulaTypeInput);
	}

	/**
	 * 
	 * @param functionalUnitInput
	 */
	public FunctionalUnitTo modifyFunctionalUnit(FunctionalUnitInput functionalUnitInput){
		return functionalUnitService.modifyFunctionalUnit(functionalUnitInput);
	}

	/**
	 * 
	 * @param htmlTagInput
	 */
	public HtmlTagTo modifyHtmlTag(HtmlTagInput htmlTagInput){
		return htmlTagService.modifyHtmlTag(htmlTagInput);
	}

	/**
	 * 
	 * @param instanceInput
	 */
	public InstanceTo modifyInstance(InstanceInput instanceInput){
		return instanceService.modifyInstance(instanceInput);
	}

	/**
	 * 
	 * @param languageInput
	 */
	public LanguageTo modifyLanguage(LanguageInput languageInput){
		return languageService.modifyLanguage(languageInput);
	}

	/**
	 * 
	 * @param messageInput
	 */
	public MessageTo modifyMessage(MessageInput messageInput){
		return messageService.modifyMessage(messageInput);
	}

	/**
	 * 
	 * @param numberSequenceRuleInput
	 */
	public NumberSequenceRuleTo modifyNumberSequenceRule(NumberSequenceRuleInput numberSequenceRuleInput){
		return numberSequenceRuleService.modifyNumberSequenceRule(numberSequenceRuleInput);
	}

	/**
	 * 
	 * @param numberSequenceRuleSegmentInput
	 */
	public NumberSequenceRuleSegmentTo modifyNumberSequenceRuleSegment(NumberSequenceRuleSegmentInput numberSequenceRuleSegmentInput){
		return numberSequenceRuleSegmentService.modifyNumberSequenceRuleSegment(numberSequenceRuleSegmentInput);
	}

	/**
	 * 
	 * @param organizationInput
	 */
	public OrganizationTo modifyOrganization(OrganizationInput organizationInput){
		return organizationService.modifyOrganization(organizationInput);
	}

	/**
	 * 
	 * @param personInput
	 */
	public PersonTo modifyPerson(PersonInput personInput){
		return personService.modifyPerson(personInput);
	}

	/**
	 * 
	 * @param personStatusInput
	 */
	public PersonStatusTo modifyPersonStatus(PersonStatusInput personStatusInput){
		return personStatusService.modifyPersonStatus(personStatusInput);
	}

	/**
	 * 
	 * @param preferenceInput
	 */
	public PreferenceTo modifyPreference(PreferenceInput preferenceInput){
		return preferenceService.modifyPreference(preferenceInput);
	}

	/**
	 * 
	 * @param processInput
	 */
	public ProcessTo modifyProcess(ProcessInput processInput){
		return processService.modifyProcess(processInput);
	}

	/**
	 * 
	 * @param productInput
	 */
	public ProductTo modifyProduct(ProductInput productInput){
		return productService.modifyProduct(productInput);
	}

	/**
	 * 
	 * @param productFunctionInput
	 */
	public ProductFunctionTo modifyProductFunction(ProductFunctionInput productFunctionInput){
		return productFunctionService.modifyProductFunction(productFunctionInput);
	}

	/**
	 * 
	 * @param programInput
	 */
	public ProgramTo modifyProgram(ProgramInput programInput){
		return programService.modifyProgram(programInput);
	}

	/**
	 * 
	 * @param projectInput
	 */
	public ProjectTo modifyProject(ProjectInput projectInput){
		return projectService.modifyProject(projectInput);
	}

	/**
	 * 
	 * @param reportInput
	 */
	public ReportTo modifyReport(ReportInput reportInput){
		return reportService.modifyReport(reportInput);
	}

	/**
	 * 
	 * @param roleInput
	 */
	public RoleTo modifyRole(RoleInput roleInput){
		return roleService.modifyRole(roleInput);
	}

	/**
	 * 
	 * @param segmentInput
	 */
	public SegmentTo modifySegment(SegmentInput segmentInput){
		return segmentService.modifySegment(segmentInput);
	}

	/**
	 * 
	 * @param styleThemeInput
	 */
	public StyleThemeTo modifyStyleTheme(StyleThemeInput styleThemeInput){
		return styleThemeService.modifyStyleTheme(styleThemeInput);
	}

	/**
	 * 
	 * @param tenantInput
	 */
	public TenantTo modifyTenant(TenantInput tenantInput){
		return tenantService.modifyTenant(tenantInput);
	}

	/**
	 * 
	 * @param translationInput
	 */
	public TranslationTo modifyTranslation(TranslationInput translationInput){
		return translationService.modifyTranslation(translationInput);
	}

	/**
	 * 
	 * @param typeInput
	 */
	public TypeTo modifyType(TypeInput typeInput){
		return typeService.modifyType(typeInput);
	}

	/**
	 * 
	 * @param userInput
	 */
	public UserTo modifyUser(UserInput userInput){
		return userService.modifyUser(userInput);
	}

	/**
	 * 
	 * @param processService
	 * @param typeService
	 * @param userService
	 * @param numbersequencerulesegmentService
	 * @param breedingcycleService
	 * @param htmltagService
	 * @param instanceService
	 * @param languageService
	 * @param messageService
	 * @param productService
	 * @param numbersequenceruleService
	 * @param organizationService
	 * @param personService
	 * @param translationService
	 * @param preferenceService
	 * @param stylethemeService
	 * @param roleService
	 * @param segmentService
	 * @param functionalunitService
	 * @param cropService
	 * @param domaininstanceService
	 * @param programService
	 * @param projectService
	 * @param reportService
	 * @param addressService
	 * @param productfunctionService
	 * @param alertService
	 * @param alertruleService
	 * @param attributesService
	 * @param personstatusService
	 * @param entityreferenceService
	 * @param emailtemplateService
	 * @param delegationService
	 * @param customerService
	 * @param domainService
	 * @param auditlogsService
	 * @param tenantService
	 * @param formulatypeService
	 */
	@Autowired
	public MutationResolver(ProcessService processService, TypeService typeService, UserService userService, NumberSequenceRuleSegmentService numbersequencerulesegmentService, BreedingCycleService breedingcycleService, HtmlTagService htmltagService, InstanceService instanceService, LanguageService languageService, MessageService messageService, ProductService productService, NumberSequenceRuleService numbersequenceruleService, OrganizationService organizationService, PersonService personService, TranslationService translationService, PreferenceService preferenceService, StyleThemeService stylethemeService, RoleService roleService, SegmentService segmentService, FunctionalUnitService functionalunitService, CropService cropService, DomainInstanceService domaininstanceService, ProgramService programService, ProjectService projectService, ReportService reportService, AddressService addressService, ProductFunctionService productfunctionService, AlertService alertService, AlertRuleService alertruleService, AttributesService attributesService, PersonStatusService personstatusService, EntityReferenceService entityreferenceService, EmailTemplateService emailtemplateService, DelegationService delegationService, CustomerService customerService, DomainService domainService, AuditLogsService auditlogsService, TenantService tenantService, FormulaTypeService formulatypeService){
		this.translationService = translationService; 
		this.typeService = typeService; 
		this.userService = userService; 
		this.numberSequenceRuleSegmentService = numbersequencerulesegmentService; 
		this.breedingCycleService = breedingcycleService; 
		this.cropService = cropService; 
		this.domainInstanceService = domaininstanceService; 
		this.programService = programService; 
		this.projectService = projectService; 
		this.reportService = reportService; 
		this.addressService = addressService; 
		this.productFunctionService = productfunctionService; 
		this.alertService = alertService; 
		this.alertRuleService = alertruleService; 
		this.attributesService = attributesService; 
		this.auditLogsService = auditlogsService; 
		this.domainService = domainService; 
		this.customerService = customerService; 
		this.delegationService = delegationService; 
		this.emailTemplateService = emailtemplateService; 
		this.entityReferenceService = entityreferenceService; 
		this.formulaTypeService = formulatypeService; 
		this.htmlTagService = htmltagService; 
		this.instanceService = instanceService; 
		this.languageService = languageService; 
		this.messageService = messageService; 
		this.productService = productService; 
		this.numberSequenceRuleService = numbersequenceruleService; 
		this.organizationService = organizationService; 
		this.personService = personService; 
		this.personStatusService = personstatusService; 
		this.preferenceService = preferenceService; 
		this.processService = processService; 
		this.roleService = roleService; 
		this.segmentService = segmentService; 
		this.styleThemeService = stylethemeService; 
		this.functionalUnitService = functionalunitService; 
		this.tenantService = tenantService; 
	
	}

}