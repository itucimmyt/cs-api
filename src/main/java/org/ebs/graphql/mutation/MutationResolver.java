///////////////////////////////////////////////////////////
//  MutationResolver.java
//  Macromedia ActionScript Implementation of the Class MutationResolver
//  Generated by Enterprise Architect
//  Created on:      13-Mar-2021 12:02:36 AM
//  Original author: EBRIONES
///////////////////////////////////////////////////////////

package org.ebs.graphql.mutation;

import org.springframework.stereotype.Component;
import org.springframework.validation.annotation.Validated;
import org.springframework.beans.factory.annotation.Autowired;
import org.ebs.services.to.WorkflowTo;
import org.ebs.services.to.Input.WorkflowInput;
import org.ebs.services.WorkflowService;
import org.ebs.services.to.AddressTo;
import org.ebs.services.to.Input.AddressInput;
import org.ebs.services.AddressService;
import org.ebs.services.to.ProductFunctionTo;
import org.ebs.services.to.Input.ProductFunctionInput;
import org.ebs.services.ProductFunctionService;
import org.ebs.services.to.AlertTo;
import org.ebs.services.to.Input.AlertInput;
import org.ebs.services.AlertService;
import org.ebs.services.to.AlertRuleTo;
import org.ebs.services.to.Input.AlertRuleInput;
import org.ebs.services.AlertRuleService;
import org.ebs.services.to.AttributesTo;
import org.ebs.services.to.Input.AttributesInput;
import org.ebs.services.AttributesService;
import org.ebs.services.to.AuditLogsTo;
import org.ebs.services.to.Input.AuditLogsInput;
import org.ebs.services.to.EventTo;
import org.ebs.services.to.Input.EventInput;
import org.ebs.services.EventService;
import org.ebs.services.to.FormulaTypeTo;
import org.ebs.services.to.Input.FormulaTypeInput;
import org.ebs.services.FormulaTypeService;
import org.ebs.services.to.HtmlTagTo;
import org.ebs.services.to.Input.HtmlTagInput;
import org.ebs.services.HtmlTagService;
import org.ebs.services.to.WfInstanceTo;
import org.ebs.services.to.Input.WfInstanceInput;
import org.ebs.services.WfInstanceService;
import org.ebs.services.to.InstanceTo;
import org.ebs.services.to.Input.InstanceInput;
import org.ebs.services.InstanceService;
import org.ebs.services.to.LanguageTo;
import org.ebs.services.to.Input.LanguageInput;
import org.ebs.services.LanguageService;
import org.ebs.services.to.MessageTo;
import org.ebs.services.to.Input.MessageInput;
import org.ebs.services.MessageService;
import org.ebs.services.to.ProductTo;
import org.ebs.services.to.Input.ProductInput;
import org.ebs.services.ProductService;
import org.ebs.services.to.NodeTo;
import org.ebs.services.to.Input.NodeInput;
import org.ebs.services.NodeService;
import org.ebs.services.to.NodeCfTo;
import org.ebs.services.to.Input.NodeCfInput;
import org.ebs.services.NodeCfService;
import org.ebs.services.to.NumberSequenceRuleTo;
import org.ebs.services.to.Input.NumberSequenceRuleInput;
import org.ebs.services.NumberSequenceRuleService;
import org.ebs.services.to.NumberSequenceRuleSegmentTo;
import org.ebs.services.to.Input.NumberSequenceRuleSegmentInput;
import org.ebs.services.NumberSequenceRuleSegmentService;
import org.ebs.services.to.OrganizationTo;
import org.ebs.services.to.Input.OrganizationInput;
import org.ebs.services.OrganizationService;
import org.ebs.services.to.PersonTo;
import org.ebs.services.to.Input.PersonInput;
import org.ebs.services.PersonService;
import org.ebs.services.to.PersonStatusTo;
import org.ebs.services.to.Input.PersonStatusInput;
import org.ebs.services.PersonStatusService;
import org.ebs.services.to.PhaseTo;
import org.ebs.services.to.Input.PhaseInput;
import org.ebs.services.PhaseService;
import org.ebs.services.to.PreferenceTo;
import org.ebs.services.to.Input.PreferenceInput;
import org.ebs.services.PreferenceService;
import org.ebs.services.to.ProcessTo;
import org.ebs.services.to.Input.ProcessInput;
import org.ebs.services.ProcessService;
import org.ebs.services.to.RequestTo;
import org.ebs.services.to.Input.RequestInput;
import org.ebs.services.RequestService;
import org.ebs.services.to.RoleTo;
import org.ebs.services.to.Input.RoleInput;
import org.ebs.services.RoleService;
import org.ebs.services.to.SegmentTo;
import org.ebs.services.to.Input.SegmentInput;
import org.ebs.services.SegmentService;
import org.ebs.services.to.StageTo;
import org.ebs.services.to.Input.StageInput;
import org.ebs.services.StageService;
import org.ebs.services.to.StatusTo;
import org.ebs.services.to.Input.StatusInput;
import org.ebs.services.StatusService;
import org.ebs.services.to.StatusTypeTo;
import org.ebs.services.to.Input.StatusTypeInput;
import org.ebs.services.StatusTypeService;
import org.ebs.services.to.StyleThemeTo;
import org.ebs.services.to.Input.StyleThemeInput;
import org.ebs.services.StyleThemeService;
import org.ebs.services.to.TenantTo;
import org.ebs.services.to.Input.TenantInput;
import org.ebs.services.TenantService;
import org.ebs.services.to.TranslationTo;
import org.ebs.services.to.Input.TranslationInput;
import org.ebs.services.TranslationService;
import org.ebs.services.to.TypeTo;
import org.ebs.services.to.Input.TypeInput;
import org.ebs.services.TypeService;
import org.ebs.services.to.UserTo;
import org.ebs.services.to.Input.UserInput;
import org.ebs.services.UserService;
import com.coxautodev.graphql.tools.GraphQLMutationResolver;
import org.ebs.services.AuditLogsService;
import org.ebs.services.to.CfTypeTo;
import org.ebs.services.to.Input.CfTypeInput;
import org.ebs.services.CfTypeService;
import org.ebs.services.to.CfValueTo;
import org.ebs.services.to.Input.CfValueInput;
import org.ebs.services.CfValueService;
import org.ebs.services.to.DomainTo;
import org.ebs.services.to.Input.DomainInput;
import org.ebs.services.DomainService;
import org.ebs.services.to.CustomerTo;
import org.ebs.services.to.Input.CustomerInput;
import org.ebs.services.CustomerService;
import org.ebs.services.to.DelegationTo;
import org.ebs.services.to.Input.DelegationInput;
import org.ebs.services.DelegationService;
import org.ebs.services.to.EmailTemplateTo;
import org.ebs.services.to.Input.EmailTemplateInput;
import org.ebs.services.EmailTemplateService;
import org.ebs.services.to.EntityReferenceTo;
import org.ebs.services.to.Input.EntityReferenceInput;
import org.ebs.services.EntityReferenceService;

/**
 * @author EBRIONES
 * @version 1.0
 * @created 13-Mar-2021 12:02:36 AM
 */
@Component @Validated
public class MutationResolver implements GraphQLMutationResolver {

	private WorkflowService workflowService;
	private AddressService addressService;
	private ProductFunctionService productFunctionService;
	private AlertService alertService;
	private AlertRuleService alertRuleService;
	private AttributesService attributesService;
	private AuditLogsService auditLogsService;
	private CfTypeService cfTypeService;
	private CfValueService cfValueService;
	private DomainService domainService;
	private CustomerService customerService;
	private DelegationService delegationService;
	private EmailTemplateService emailTemplateService;
	private EntityReferenceService entityReferenceService;
	private EventService eventService;
	private FormulaTypeService formulaTypeService;
	private HtmlTagService htmlTagService;
	private WfInstanceService wfInstanceService;
	private InstanceService instanceService;
	private LanguageService languageService;
	private MessageService messageService;
	private ProductService productService;
	private NodeService nodeService;
	private NodeCfService nodeCfService;
	private NumberSequenceRuleService numberSequenceRuleService;
	private NumberSequenceRuleSegmentService numberSequenceRuleSegmentService;
	private OrganizationService organizationService;
	private PersonService personService;
	private PersonStatusService personStatusService;
	private PhaseService phaseService;
	private PreferenceService preferenceService;
	private ProcessService processService;
	private RequestService requestService;
	private RoleService roleService;
	private SegmentService segmentService;
	private StageService stageService;
	private StatusService statusService;
	private StatusTypeService statusTypeService;
	private StyleThemeService styleThemeService;
	private TenantService tenantService;
	private TranslationService translationService;
	private TypeService typeService;
	private UserService userService;

	/**
	 * 
	 * @param addressInput
	 */
	public AddressTo createAddress(AddressInput addressInput){
		return addressService.createAddress(addressInput);
	}

	/**
	 * 
	 * @param alertInput
	 */
	public AlertTo createAlert(AlertInput alertInput){
		return alertService.createAlert(alertInput);
	}

	/**
	 * 
	 * @param alertRuleInput
	 */
	public AlertRuleTo createAlertRule(AlertRuleInput alertRuleInput){
		return alertRuleService.createAlertRule(alertRuleInput);
	}

	/**
	 * 
	 * @param attributesInput
	 */
	public AttributesTo createAttributes(AttributesInput attributesInput){
		return attributesService.createAttributes(attributesInput);
	}

	/**
	 * 
	 * @param auditLogsInput
	 */
	public AuditLogsTo createAuditLogs(AuditLogsInput auditLogsInput){
		return auditLogsService.createAuditLogs(auditLogsInput);
	}

	/**
	 * 
	 * @param cfTypeInput
	 */
	public CfTypeTo createCfType(CfTypeInput cfTypeInput){
		return cfTypeService.createCfType(cfTypeInput);
	}

	/**
	 * 
	 * @param cfValueInput
	 */
	public CfValueTo createCfValue(CfValueInput cfValueInput){
		return cfValueService.createCfValue(cfValueInput);
	}

	/**
	 * 
	 * @param customerInput
	 */
	public CustomerTo createCustomer(CustomerInput customerInput){
		return customerService.createCustomer(customerInput);
	}

	/**
	 * 
	 * @param delegationInput
	 */
	public DelegationTo createDelegation(DelegationInput delegationInput){
		return delegationService.createDelegation(delegationInput);
	}

	/**
	 * 
	 * @param domainInput
	 */
	public DomainTo createDomain(DomainInput domainInput){
		return domainService.createDomain(domainInput);
	}

	/**
	 * 
	 * @param emailTemplateInput
	 */
	public EmailTemplateTo createEmailTemplate(EmailTemplateInput emailTemplateInput){
		return emailTemplateService.createEmailTemplate(emailTemplateInput);
	}

	/**
	 * 
	 * @param entityReferenceInput
	 */
	public EntityReferenceTo createEntityReference(EntityReferenceInput entityReferenceInput){
		return entityReferenceService.createEntityReference(entityReferenceInput);
	}

	/**
	 * 
	 * @param eventInput
	 */
	public EventTo createEvent(EventInput eventInput){
		return eventService.createEvent(eventInput);
	}

	/**
	 * 
	 * @param formulaTypeInput
	 */
	public FormulaTypeTo createFormulaType(FormulaTypeInput formulaTypeInput){
		return formulaTypeService.createFormulaType(formulaTypeInput);
	}

	/**
	 * 
	 * @param htmlTagInput
	 */
	public HtmlTagTo createHtmlTag(HtmlTagInput htmlTagInput){
		return htmlTagService.createHtmlTag(htmlTagInput);
	}

	/**
	 * 
	 * @param instanceInput
	 */
	public InstanceTo createInstance(InstanceInput instanceInput){
		return instanceService.createInstance(instanceInput);
	}

	/**
	 * 
	 * @param languageInput
	 */
	public LanguageTo createLanguage(LanguageInput languageInput){
		return languageService.createLanguage(languageInput);
	}

	/**
	 * 
	 * @param messageInput
	 */
	public MessageTo createMessage(MessageInput messageInput){
		return messageService.createMessage(messageInput);
	}

	/**
	 * 
	 * @param nodeInput
	 */
	public NodeTo createNode(NodeInput nodeInput){
		return nodeService.createNode(nodeInput);
	}

	/**
	 * 
	 * @param nodeCfInput
	 */
	public NodeCfTo createNodeCf(NodeCfInput nodeCfInput){
		return nodeCfService.createNodeCf(nodeCfInput);
	}

	/**
	 * 
	 * @param numberSequenceRuleInput
	 */
	public NumberSequenceRuleTo createNumberSequenceRule(NumberSequenceRuleInput numberSequenceRuleInput){
		return numberSequenceRuleService.createNumberSequenceRule(numberSequenceRuleInput);
	}

	/**
	 * 
	 * @param numberSequenceRuleSegmentInput
	 */
	public NumberSequenceRuleSegmentTo createNumberSequenceRuleSegment(NumberSequenceRuleSegmentInput numberSequenceRuleSegmentInput){
		return numberSequenceRuleSegmentService.createNumberSequenceRuleSegment(numberSequenceRuleSegmentInput);
	}

	/**
	 * 
	 * @param organizationInput
	 */
	public OrganizationTo createOrganization(OrganizationInput organizationInput){
		return organizationService.createOrganization(organizationInput);
	}

	/**
	 * 
	 * @param personInput
	 */
	public PersonTo createPerson(PersonInput personInput){
		return personService.createPerson(personInput);
	}

	/**
	 * 
	 * @param personStatusInput
	 */
	public PersonStatusTo createPersonStatus(PersonStatusInput personStatusInput){
		return personStatusService.createPersonStatus(personStatusInput);
	}

	/**
	 * 
	 * @param phaseInput
	 */
	public PhaseTo createPhase(PhaseInput phaseInput){
		return phaseService.createPhase(phaseInput);
	}

	/**
	 * 
	 * @param preferenceInput
	 */
	public PreferenceTo createPreference(PreferenceInput preferenceInput){
		return preferenceService.createPreference(preferenceInput);
	}

	/**
	 * 
	 * @param processInput
	 */
	public ProcessTo createProcess(ProcessInput processInput){
		return processService.createProcess(processInput);
	}

	/**
	 * 
	 * @param productInput
	 */
	public ProductTo createProduct(ProductInput productInput){
		return productService.createProduct(productInput);
	}

	/**
	 * 
	 * @param productFunctionInput
	 */
	public ProductFunctionTo createProductFunction(ProductFunctionInput productFunctionInput){
		return productFunctionService.createProductFunction(productFunctionInput);
	}

	/**
	 * 
	 * @param requestInput
	 */
	public RequestTo createRequest(RequestInput requestInput){
		return requestService.createRequest(requestInput);
	}

	/**
	 * 
	 * @param roleInput
	 */
	public RoleTo createRole(RoleInput roleInput){
		return roleService.createRole(roleInput);
	}

	/**
	 * 
	 * @param segmentInput
	 */
	public SegmentTo createSegment(SegmentInput segmentInput){
		return segmentService.createSegment(segmentInput);
	}

	/**
	 * 
	 * @param stageInput
	 */
	public StageTo createStage(StageInput stageInput){
		return stageService.createStage(stageInput);
	}

	/**
	 * 
	 * @param statusInput
	 */
	public StatusTo createStatus(StatusInput statusInput){
		return statusService.createStatus(statusInput);
	}

	/**
	 * 
	 * @param statusTypeInput
	 */
	public StatusTypeTo createStatusType(StatusTypeInput statusTypeInput){
		return statusTypeService.createStatusType(statusTypeInput);
	}

	/**
	 * 
	 * @param styleThemeInput
	 */
	public StyleThemeTo createStyleTheme(StyleThemeInput styleThemeInput){
		return styleThemeService.createStyleTheme(styleThemeInput);
	}

	/**
	 * 
	 * @param tenantInput
	 */
	public TenantTo createTenant(TenantInput tenantInput){
		return tenantService.createTenant(tenantInput);
	}

	/**
	 * 
	 * @param translationInput
	 */
	public TranslationTo createTranslation(TranslationInput translationInput){
		return translationService.createTranslation(translationInput);
	}

	/**
	 * 
	 * @param typeInput
	 */
	public TypeTo createType(TypeInput typeInput){
		return typeService.createType(typeInput);
	}

	/**
	 * 
	 * @param userInput
	 */
	public UserTo createUser(UserInput userInput){
		return userService.createUser(userInput);
	}

	/**
	 * 
	 * @param wfInstanceInput
	 */
	public WfInstanceTo createWfInstance(WfInstanceInput wfInstanceInput){
		return wfInstanceService.createWfInstance(wfInstanceInput);
	}

	/**
	 * 
	 * @param workflowInput
	 */
	public WorkflowTo createWorkflow(WorkflowInput workflowInput){
		return workflowService.createWorkflow(workflowInput);
	}

	/**
	 * 
	 * @param idaddress
	 */
	public int deleteAddress(int idaddress){
		return addressService.deleteAddress(idaddress);
	}

	/**
	 * 
	 * @param idalert
	 */
	public int deleteAlert(int idalert){
		return alertService.deleteAlert(idalert);
	}

	/**
	 * 
	 * @param idalertRule
	 */
	public int deleteAlertRule(int idalertRule){
		return alertRuleService.deleteAlertRule(idalertRule);
	}

	/**
	 * 
	 * @param idattributes
	 */
	public int deleteAttributes(int idattributes){
		return attributesService.deleteAttributes(idattributes);
	}

	/**
	 * 
	 * @param idauditLogs
	 */
	public int deleteAuditLogs(int idauditLogs){
		return auditLogsService.deleteAuditLogs(idauditLogs);
	}

	/**
	 * 
	 * @param idcfType
	 */
	public int deleteCfType(int idcfType){
		return cfTypeService.deleteCfType(idcfType);
	}

	/**
	 * 
	 * @param idcfValue
	 */
	public int deleteCfValue(int idcfValue){
		return cfValueService.deleteCfValue(idcfValue);
	}

	/**
	 * 
	 * @param idcustomer
	 */
	public int deleteCustomer(int idcustomer){
		return customerService.deleteCustomer(idcustomer);
	}

	/**
	 * 
	 * @param iddelegation
	 */
	public int deleteDelegation(int iddelegation){
		return delegationService.deleteDelegation(iddelegation);
	}

	/**
	 * 
	 * @param iddomain
	 */
	public int deleteDomain(int iddomain){
		return domainService.deleteDomain(iddomain);
	}

	/**
	 * 
	 * @param idemailTemplate
	 */
	public int deleteEmailTemplate(int idemailTemplate){
		return emailTemplateService.deleteEmailTemplate(idemailTemplate);
	}

	/**
	 * 
	 * @param identityReference
	 */
	public int deleteEntityReference(int identityReference){
		return entityReferenceService.deleteEntityReference(identityReference);
	}

	/**
	 * 
	 * @param idevent
	 */
	public int deleteEvent(int idevent){
		return eventService.deleteEvent(idevent);
	}

	/**
	 * 
	 * @param idformulaType
	 */
	public int deleteFormulaType(int idformulaType){
		return formulaTypeService.deleteFormulaType(idformulaType);
	}

	/**
	 * 
	 * @param idhtmlTag
	 */
	public int deleteHtmlTag(int idhtmlTag){
		return htmlTagService.deleteHtmlTag(idhtmlTag);
	}

	/**
	 * 
	 * @param idinstance
	 */
	public int deleteInstance(int idinstance){
		return instanceService.deleteInstance(idinstance);
	}

	/**
	 * 
	 * @param idlanguage
	 */
	public int deleteLanguage(int idlanguage){
		return languageService.deleteLanguage(idlanguage);
	}

	/**
	 * 
	 * @param idmessage
	 */
	public int deleteMessage(int idmessage){
		return messageService.deleteMessage(idmessage);
	}

	/**
	 * 
	 * @param idnode
	 */
	public int deleteNode(int idnode){
		return nodeService.deleteNode(idnode);
	}

	/**
	 * 
	 * @param idnodeCf
	 */
	public int deleteNodeCf(int idnodeCf){
		return nodeCfService.deleteNodeCf(idnodeCf);
	}

	/**
	 * 
	 * @param idnumberSequenceRule
	 */
	public int deleteNumberSequenceRule(int idnumberSequenceRule){
		return numberSequenceRuleService.deleteNumberSequenceRule(idnumberSequenceRule);
	}

	/**
	 * 
	 * @param idnumberSequenceRuleSegment
	 */
	public int deleteNumberSequenceRuleSegment(int idnumberSequenceRuleSegment){
		return numberSequenceRuleSegmentService.deleteNumberSequenceRuleSegment(idnumberSequenceRuleSegment);
	}

	/**
	 * 
	 * @param idorganization
	 */
	public int deleteOrganization(int idorganization){
		return organizationService.deleteOrganization(idorganization);
	}

	/**
	 * 
	 * @param idperson
	 */
	public int deletePerson(int idperson){
		return personService.deletePerson(idperson);
	}

	/**
	 * 
	 * @param idpersonStatus
	 */
	public int deletePersonStatus(int idpersonStatus){
		return personStatusService.deletePersonStatus(idpersonStatus);
	}

	/**
	 * 
	 * @param idphase
	 */
	public int deletePhase(int idphase){
		return phaseService.deletePhase(idphase);
	}

	/**
	 * 
	 * @param idpreference
	 */
	public int deletePreference(int idpreference){
		return preferenceService.deletePreference(idpreference);
	}

	/**
	 * 
	 * @param idprocess
	 */
	public int deleteProcess(int idprocess){
		return processService.deleteProcess(idprocess);
	}

	/**
	 * 
	 * @param idproduct
	 */
	public int deleteProduct(int idproduct){
		return productService.deleteProduct(idproduct);
	}

	/**
	 * 
	 * @param idproductFunction
	 */
	public int deleteProductFunction(int idproductFunction){
		return productFunctionService.deleteProductFunction(idproductFunction);
	}

	/**
	 * 
	 * @param idrequest
	 */
	public int deleteRequest(int idrequest){
		return requestService.deleteRequest(idrequest);
	}

	/**
	 * 
	 * @param idrole
	 */
	public int deleteRole(int idrole){
		return roleService.deleteRole(idrole);
	}

	/**
	 * 
	 * @param idsegment
	 */
	public int deleteSegment(int idsegment){
		return segmentService.deleteSegment(idsegment);
	}

	/**
	 * 
	 * @param idstage
	 */
	public int deleteStage(int idstage){
		return stageService.deleteStage(idstage);
	}

	/**
	 * 
	 * @param idstatus
	 */
	public int deleteStatus(int idstatus){
		return statusService.deleteStatus(idstatus);
	}

	/**
	 * 
	 * @param idstatusType
	 */
	public int deleteStatusType(int idstatusType){
		return statusTypeService.deleteStatusType(idstatusType);
	}

	/**
	 * 
	 * @param idstyleTheme
	 */
	public int deleteStyleTheme(int idstyleTheme){
		return styleThemeService.deleteStyleTheme(idstyleTheme);
	}

	/**
	 * 
	 * @param idtenant
	 */
	public int deleteTenant(int idtenant){
		return tenantService.deleteTenant(idtenant);
	}

	/**
	 * 
	 * @param idtranslation
	 */
	public int deleteTranslation(int idtranslation){
		return translationService.deleteTranslation(idtranslation);
	}

	/**
	 * 
	 * @param idtype
	 */
	public int deleteType(int idtype){
		return typeService.deleteType(idtype);
	}

	/**
	 * 
	 * @param iduser
	 */
	public int deleteUser(int iduser){
		return userService.deleteUser(iduser);
	}

	/**
	 * 
	 * @param idwfInstance
	 */
	public int deleteWfInstance(int idwfInstance){
		return wfInstanceService.deleteWfInstance(idwfInstance);
	}

	/**
	 * 
	 * @param idworkflow
	 */
	public int deleteWorkflow(int idworkflow){
		return workflowService.deleteWorkflow(idworkflow);
	}

	/**
	 * 
	 * @param addressInput
	 */
	public AddressTo modifyAddress(AddressInput addressInput){
		return addressService.modifyAddress(addressInput);
	}

	/**
	 * 
	 * @param alertInput
	 */
	public AlertTo modifyAlert(AlertInput alertInput){
		return alertService.modifyAlert(alertInput);
	}

	/**
	 * 
	 * @param alertRuleInput
	 */
	public AlertRuleTo modifyAlertRule(AlertRuleInput alertRuleInput){
		return alertRuleService.modifyAlertRule(alertRuleInput);
	}

	/**
	 * 
	 * @param attributesInput
	 */
	public AttributesTo modifyAttributes(AttributesInput attributesInput){
		return attributesService.modifyAttributes(attributesInput);
	}

	/**
	 * 
	 * @param auditLogsInput
	 */
	public AuditLogsTo modifyAuditLogs(AuditLogsInput auditLogsInput){
		return auditLogsService.modifyAuditLogs(auditLogsInput);
	}

	/**
	 * 
	 * @param cfTypeInput
	 */
	public CfTypeTo modifyCfType(CfTypeInput cfTypeInput){
		return cfTypeService.modifyCfType(cfTypeInput);
	}

	/**
	 * 
	 * @param cfValueInput
	 */
	public CfValueTo modifyCfValue(CfValueInput cfValueInput){
		return cfValueService.modifyCfValue(cfValueInput);
	}

	/**
	 * 
	 * @param customerInput
	 */
	public CustomerTo modifyCustomer(CustomerInput customerInput){
		return customerService.modifyCustomer(customerInput);
	}

	/**
	 * 
	 * @param delegationInput
	 */
	public DelegationTo modifyDelegation(DelegationInput delegationInput){
		return delegationService.modifyDelegation(delegationInput);
	}

	/**
	 * 
	 * @param domainInput
	 */
	public DomainTo modifyDomain(DomainInput domainInput){
		return domainService.modifyDomain(domainInput);
	}

	/**
	 * 
	 * @param emailTemplateInput
	 */
	public EmailTemplateTo modifyEmailTemplate(EmailTemplateInput emailTemplateInput){
		return emailTemplateService.modifyEmailTemplate(emailTemplateInput);
	}

	/**
	 * 
	 * @param entityReferenceInput
	 */
	public EntityReferenceTo modifyEntityReference(EntityReferenceInput entityReferenceInput){
		return entityReferenceService.modifyEntityReference(entityReferenceInput);
	}

	/**
	 * 
	 * @param eventInput
	 */
	public EventTo modifyEvent(EventInput eventInput){
		return eventService.modifyEvent(eventInput);
	}

	/**
	 * 
	 * @param formulaTypeInput
	 */
	public FormulaTypeTo modifyFormulaType(FormulaTypeInput formulaTypeInput){
		return formulaTypeService.modifyFormulaType(formulaTypeInput);
	}

	/**
	 * 
	 * @param htmlTagInput
	 */
	public HtmlTagTo modifyHtmlTag(HtmlTagInput htmlTagInput){
		return htmlTagService.modifyHtmlTag(htmlTagInput);
	}

	/**
	 * 
	 * @param instanceInput
	 */
	public InstanceTo modifyInstance(InstanceInput instanceInput){
		return instanceService.modifyInstance(instanceInput);
	}

	/**
	 * 
	 * @param languageInput
	 */
	public LanguageTo modifyLanguage(LanguageInput languageInput){
		return languageService.modifyLanguage(languageInput);
	}

	/**
	 * 
	 * @param messageInput
	 */
	public MessageTo modifyMessage(MessageInput messageInput){
		return messageService.modifyMessage(messageInput);
	}

	/**
	 * 
	 * @param nodeInput
	 */
	public NodeTo modifyNode(NodeInput nodeInput){
		return nodeService.modifyNode(nodeInput);
	}

	/**
	 * 
	 * @param nodeCfInput
	 */
	public NodeCfTo modifyNodeCf(NodeCfInput nodeCfInput){
		return nodeCfService.modifyNodeCf(nodeCfInput);
	}

	/**
	 * 
	 * @param numberSequenceRuleInput
	 */
	public NumberSequenceRuleTo modifyNumberSequenceRule(NumberSequenceRuleInput numberSequenceRuleInput){
		return numberSequenceRuleService.modifyNumberSequenceRule(numberSequenceRuleInput);
	}

	/**
	 * 
	 * @param numberSequenceRuleSegmentInput
	 */
	public NumberSequenceRuleSegmentTo modifyNumberSequenceRuleSegment(NumberSequenceRuleSegmentInput numberSequenceRuleSegmentInput){
		return numberSequenceRuleSegmentService.modifyNumberSequenceRuleSegment(numberSequenceRuleSegmentInput);
	}

	/**
	 * 
	 * @param organizationInput
	 */
	public OrganizationTo modifyOrganization(OrganizationInput organizationInput){
		return organizationService.modifyOrganization(organizationInput);
	}

	/**
	 * 
	 * @param personInput
	 */
	public PersonTo modifyPerson(PersonInput personInput){
		return personService.modifyPerson(personInput);
	}

	/**
	 * 
	 * @param personStatusInput
	 */
	public PersonStatusTo modifyPersonStatus(PersonStatusInput personStatusInput){
		return personStatusService.modifyPersonStatus(personStatusInput);
	}

	/**
	 * 
	 * @param phaseInput
	 */
	public PhaseTo modifyPhase(PhaseInput phaseInput){
		return phaseService.modifyPhase(phaseInput);
	}

	/**
	 * 
	 * @param preferenceInput
	 */
	public PreferenceTo modifyPreference(PreferenceInput preferenceInput){
		return preferenceService.modifyPreference(preferenceInput);
	}

	/**
	 * 
	 * @param processInput
	 */
	public ProcessTo modifyProcess(ProcessInput processInput){
		return processService.modifyProcess(processInput);
	}

	/**
	 * 
	 * @param productInput
	 */
	public ProductTo modifyProduct(ProductInput productInput){
		return productService.modifyProduct(productInput);
	}

	/**
	 * 
	 * @param productFunctionInput
	 */
	public ProductFunctionTo modifyProductFunction(ProductFunctionInput productFunctionInput){
		return productFunctionService.modifyProductFunction(productFunctionInput);
	}

	/**
	 * 
	 * @param requestInput
	 */
	public RequestTo modifyRequest(RequestInput requestInput){
		return requestService.modifyRequest(requestInput);
	}

	/**
	 * 
	 * @param roleInput
	 */
	public RoleTo modifyRole(RoleInput roleInput){
		return roleService.modifyRole(roleInput);
	}

	/**
	 * 
	 * @param segmentInput
	 */
	public SegmentTo modifySegment(SegmentInput segmentInput){
		return segmentService.modifySegment(segmentInput);
	}

	/**
	 * 
	 * @param stageInput
	 */
	public StageTo modifyStage(StageInput stageInput){
		return stageService.modifyStage(stageInput);
	}

	/**
	 * 
	 * @param statusInput
	 */
	public StatusTo modifyStatus(StatusInput statusInput){
		return statusService.modifyStatus(statusInput);
	}

	/**
	 * 
	 * @param statusTypeInput
	 */
	public StatusTypeTo modifyStatusType(StatusTypeInput statusTypeInput){
		return statusTypeService.modifyStatusType(statusTypeInput);
	}

	/**
	 * 
	 * @param styleThemeInput
	 */
	public StyleThemeTo modifyStyleTheme(StyleThemeInput styleThemeInput){
		return styleThemeService.modifyStyleTheme(styleThemeInput);
	}

	/**
	 * 
	 * @param tenantInput
	 */
	public TenantTo modifyTenant(TenantInput tenantInput){
		return tenantService.modifyTenant(tenantInput);
	}

	/**
	 * 
	 * @param translationInput
	 */
	public TranslationTo modifyTranslation(TranslationInput translationInput){
		return translationService.modifyTranslation(translationInput);
	}

	/**
	 * 
	 * @param typeInput
	 */
	public TypeTo modifyType(TypeInput typeInput){
		return typeService.modifyType(typeInput);
	}

	/**
	 * 
	 * @param userInput
	 */
	public UserTo modifyUser(UserInput userInput){
		return userService.modifyUser(userInput);
	}

	/**
	 * 
	 * @param wfInstanceInput
	 */
	public WfInstanceTo modifyWfInstance(WfInstanceInput wfInstanceInput){
		return wfInstanceService.modifyWfInstance(wfInstanceInput);
	}

	/**
	 * 
	 * @param workflowInput
	 */
	public WorkflowTo modifyWorkflow(WorkflowInput workflowInput){
		return workflowService.modifyWorkflow(workflowInput);
	}

	/**
	 * 
	 * @param personService
	 * @param addressService
	 * @param statustypeService
	 * @param stageService
	 * @param segmentService
	 * @param roleService
	 * @param requestService
	 * @param processService
	 * @param preferenceService
	 * @param tenantService
	 * @param personstatusService
	 * @param translationService
	 * @param organizationService
	 * @param numbersequencerulesegmentService
	 * @param numbersequenceruleService
	 * @param nodecfService
	 * @param nodeService
	 * @param productService
	 * @param alertService
	 * @param productfunctionService
	 * @param phaseService
	 * @param customerService
	 * @param messageService
	 * @param workflowService
	 * @param instanceService
	 * @param wfinstanceService
	 * @param htmltagService
	 * @param formulatypeService
	 * @param eventService
	 * @param entityreferenceService
	 * @param languageService
	 * @param delegationService
	 * @param statusService
	 * @param domainService
	 * @param cfvalueService
	 * @param cftypeService
	 * @param auditlogsService
	 * @param attributesService
	 * @param alertruleService
	 * @param userService
	 * @param typeService
	 * @param emailtemplateService
	 * @param stylethemeService
	 */
	@Autowired
	public MutationResolver(PersonService personService, AddressService addressService, StatusTypeService statustypeService, StageService stageService, SegmentService segmentService, RoleService roleService, RequestService requestService, ProcessService processService, PreferenceService preferenceService, TenantService tenantService, PersonStatusService personstatusService, TranslationService translationService, OrganizationService organizationService, NumberSequenceRuleSegmentService numbersequencerulesegmentService, NumberSequenceRuleService numbersequenceruleService, NodeCfService nodecfService, NodeService nodeService, ProductService productService, AlertService alertService, ProductFunctionService productfunctionService, PhaseService phaseService, CustomerService customerService, MessageService messageService, WorkflowService workflowService, InstanceService instanceService, WfInstanceService wfinstanceService, HtmlTagService htmltagService, FormulaTypeService formulatypeService, EventService eventService, EntityReferenceService entityreferenceService, LanguageService languageService, DelegationService delegationService, StatusService statusService, DomainService domainService, CfValueService cfvalueService, CfTypeService cftypeService, AuditLogsService auditlogsService, AttributesService attributesService, AlertRuleService alertruleService, UserService userService, TypeService typeService, EmailTemplateService emailtemplateService, StyleThemeService stylethemeService){
		this.workflowService = workflowService; 
		this.addressService = addressService; 
		this.productFunctionService = productfunctionService; 
		this.alertService = alertService; 
		this.alertRuleService = alertruleService; 
		this.attributesService = attributesService; 
		this.auditLogsService = auditlogsService; 
		this.cfTypeService = cftypeService; 
		this.cfValueService = cfvalueService; 
		this.domainService = domainService; 
		this.customerService = customerService; 
		this.delegationService = delegationService; 
		this.emailTemplateService = emailtemplateService; 
		this.entityReferenceService = entityreferenceService; 
		this.eventService = eventService; 
		this.formulaTypeService = formulatypeService; 
		this.htmlTagService = htmltagService; 
		this.wfInstanceService = wfinstanceService; 
		this.instanceService = instanceService; 
		this.languageService = languageService; 
		this.messageService = messageService; 
		this.productService = productService; 
		this.nodeService = nodeService; 
		this.nodeCfService = nodecfService; 
		this.numberSequenceRuleService = numbersequenceruleService; 
		this.numberSequenceRuleSegmentService = numbersequencerulesegmentService; 
		this.organizationService = organizationService; 
		this.personService = personService; 
		this.personStatusService = personstatusService; 
		this.phaseService = phaseService; 
		this.preferenceService = preferenceService; 
		this.processService = processService; 
		this.requestService = requestService; 
		this.roleService = roleService; 
		this.segmentService = segmentService; 
		this.stageService = stageService; 
		this.statusService = statusService; 
		this.statusTypeService = statustypeService; 
		this.styleThemeService = stylethemeService; 
		this.tenantService = tenantService; 
		this.translationService = translationService; 
		this.typeService = typeService; 
		this.userService = userService; 
	
	}

}