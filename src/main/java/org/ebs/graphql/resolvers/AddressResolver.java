///////////////////////////////////////////////////////////
//  AddressResolver.java
//  Macromedia ActionScript Implementation of the Class AddressResolver
//  Generated by Enterprise Architect
//  Created on:      28-Apr-2020 11:58:03 PM
//  Original author: EBRIONES
///////////////////////////////////////////////////////////

package org.ebs.graphql.resolvers;

import com.coxautodev.graphql.tools.GraphQLResolver;
import org.springframework.stereotype.Component;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.validation.annotation.Validated;
import java.util.stream.Collectors;
import java.util.List;
import java.util.Optional;
import java.util.Set;
import org.springframework.core.convert.ConversionService;
import org.ebs.model.AddressModel;
import org.ebs.services.to.AddressTo;
import org.ebs.model.repos.AddressRepository;
import org.ebs.services.AddressService;
import org.ebs.model.repos.PearsonRepository;
import org.ebs.services.PearsonService;
import org.ebs.services.to.PearsonTo;

/**
 * @author EBRIONES
 * @version 1.0
 * @created 28-Apr-2020 11:58:03 PM
 */
@Component @Validated
public class AddressResolver implements GraphQLResolver<AddressTo> {

	private AddressService addressService;
	private AddressRepository addressRepository;
	@Autowired
	private ConversionService converter;
	private PearsonService pearsonService;
	private PearsonRepository pearsonRepository;

	/**
	 * 
	 * @param pearsonRepository
	 * @param pearsonService
	 * @param addressRepository
	 * @param addressService
	 */
	@Autowired
	public AddressResolver(PearsonRepository pearsonRepository, PearsonService pearsonService, AddressRepository addressRepository, AddressService addressService){
		this.addressService = addressService; 
		this.addressRepository = addressRepository; 
		this.pearsonService = pearsonService; 
		this.pearsonRepository = pearsonRepository; 
	
	}

	/**
	 * 
	 * @param addressTo
	 */
	public Set<PearsonTo> getPearsons(AddressTo addressTo){
		return pearsonRepository.findByAddressId(addressTo.getId()).stream() 
		 .map(e -> converter.convert(e,PearsonTo.class)) 
		 .collect(Collectors.toSet());
	}

}