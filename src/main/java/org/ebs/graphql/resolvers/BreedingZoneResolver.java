///////////////////////////////////////////////////////////
//  BreedingZoneResolver.java
//  Macromedia ActionScript Implementation of the Class BreedingZoneResolver
//  Generated by Enterprise Architect
//  Created on:      17-May-2020 3:09:23 PM
//  Original author: EBRIONES
///////////////////////////////////////////////////////////

package org.ebs.graphql.resolvers;

import com.coxautodev.graphql.tools.GraphQLResolver;
import org.springframework.stereotype.Component;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.validation.annotation.Validated;
import java.util.stream.Collectors;
import java.util.List;
import java.util.Optional;
import java.util.Set;
import org.springframework.core.convert.ConversionService;
import org.ebs.model.BreedingZoneModel;
import org.ebs.services.to.BreedingZoneTo;
import org.ebs.model.repos.BreedingZoneRepository;
import org.ebs.services.BreedingZoneService;
import org.ebs.services.PipelineService;
import org.ebs.model.repos.PipelineRepository;
import org.ebs.services.to.PipelineTo;

/**
 * @author EBRIONES
 * @version 1.0
 * @created 17-May-2020 3:09:23 PM
 */
@Component @Validated
public class BreedingZoneResolver implements GraphQLResolver<BreedingZoneTo> {

	private BreedingZoneService breedingzoneService;
	private BreedingZoneRepository breedingzoneRepository;
	@Autowired
	private ConversionService converter;
	private PipelineService pipelineService;
	private PipelineRepository pipelineRepository;

	/**
	 * 
	 * @param pipelineRepository
	 * @param pipelineService
	 * @param breedingzoneRepository
	 * @param breedingzoneService
	 */
	@Autowired
	public BreedingZoneResolver(PipelineRepository pipelineRepository, PipelineService pipelineService, BreedingZoneRepository breedingzoneRepository, BreedingZoneService breedingzoneService){
		this.breedingzoneService = breedingzoneService; 
		this.breedingzoneRepository = breedingzoneRepository; 
		this.pipelineService = pipelineService; 
		this.pipelineRepository = pipelineRepository; 
	
	}

	/**
	 * 
	 * @param breedingzoneTo
	 */
	public PipelineTo getPipeline(BreedingZoneTo breedingzoneTo){
		BreedingZoneModel breedingzoneModel = breedingzoneRepository.findById(breedingzoneTo.getId()).get(); 
		 return pipelineService.findPipeline(breedingzoneModel.getPipeline().getId()).get();
	}

}