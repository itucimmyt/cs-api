///////////////////////////////////////////////////////////
//  ProcessResolver.java
//  Macromedia ActionScript Implementation of the Class ProcessResolver
//  Generated by Enterprise Architect
//  Created on:      28-Apr-2020 11:58:25 PM
//  Original author: EBRIONES
///////////////////////////////////////////////////////////

package org.ebs.graphql.resolvers;

import com.coxautodev.graphql.tools.GraphQLResolver;
import org.springframework.stereotype.Component;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.validation.annotation.Validated;
import java.util.stream.Collectors;
import java.util.List;
import java.util.Optional;
import java.util.Set;
import org.springframework.core.convert.ConversionService;
import org.ebs.model.ProcessModel;
import org.ebs.services.to.ProcessTo;
import org.ebs.model.repos.ProcessRepository;
import org.ebs.services.ProcessService;
import org.ebs.services.WorkflowNodeService;
import org.ebs.model.repos.WorkflowNodeRepository;
import org.ebs.services.to.WorkflowNodeTo;

/**
 * @author EBRIONES
 * @version 1.0
 * @created 28-Apr-2020 11:58:25 PM
 */
@Component @Validated
public class ProcessResolver implements GraphQLResolver<ProcessTo> {

	private ProcessService processService;
	private ProcessRepository processRepository;
	@Autowired
	private ConversionService converter;
	private WorkflowNodeService workflownodeService;
	private WorkflowNodeRepository workflownodeRepository;

	/**
	 * 
	 * @param processTo
	 */
	public WorkflowNodeTo getWorkflowNode(ProcessTo processTo){
		ProcessModel processModel = processRepository.findById(processTo.getId()).get(); 
		 return workflownodeService.findWorkflowNode(processModel.getWorkflowNode().getId()).get();
	}

	/**
	 * 
	 * @param workflownodeRepository
	 * @param workflownodeService
	 * @param processRepository
	 * @param processService
	 */
	@Autowired
	public ProcessResolver(WorkflowNodeRepository workflownodeRepository, WorkflowNodeService workflownodeService, ProcessRepository processRepository, ProcessService processService){
		this.processService = processService; 
		this.processRepository = processRepository; 
		this.workflownodeService = workflownodeService; 
		this.workflownodeRepository = workflownodeRepository; 
	
	}

}