///////////////////////////////////////////////////////////
//  WorkflowResolver.java
//  Macromedia ActionScript Implementation of the Class WorkflowResolver
//  Generated by Enterprise Architect
//  Created on:      07-Sep-2020 8:12:46 AM
//  Original author: EBRIONES
//  Modified by: JAROJAS 02-09-2020
///////////////////////////////////////////////////////////

package org.ebs.graphql.resolvers;

import org.ebs.services.WorkflowService;
import org.ebs.services.to.WorkflowPhaseTo;
import org.ebs.services.to.EntityReferenceTo;
import org.ebs.services.to.TenantTo;
import org.ebs.services.to.HtmlTagTo;
import org.ebs.services.to.WorkflowInstanceTo;
import org.ebs.services.to.WorkflowNodeTo;
import com.coxautodev.graphql.tools.GraphQLResolver;
import org.ebs.services.to.WorkflowTo;
import org.springframework.stereotype.Component;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.validation.annotation.Validated;
import java.util.Set;

/**
 * @author EBRIONES
 * @version 1.0
 * @created 07-Sep-2020 8:12:46 AM
 */
@Component @Validated
public class WorkflowResolver implements GraphQLResolver<WorkflowTo> {

	private WorkflowService workflowService;

	/**
	 * 
	 * @param workflowTo
	 */
	public EntityReferenceTo getEntityReference(WorkflowTo workflowTo){
		return workflowService.findEntityReference(workflowTo.getId()).get();
	}

	/**
	 * 
	 * @param workflowTo
	 */
	public HtmlTagTo getHtmlTag(WorkflowTo workflowTo){
		return workflowService.findHtmlTag(workflowTo.getId()).get();
	}

	/**
	 * 
	 * @param workflowTo
	 */
	public TenantTo getTenant(WorkflowTo workflowTo){
		return workflowService.findTenant(workflowTo.getId()).get();
	}

	/**
	 * 
	 * @param workflow
	 */
	public Set<WorkflowInstanceTo> getWorkflowInstances(WorkflowTo workflow){
		return workflowService.findWorkflowInstances(workflow.getId());
	}

	/**
	 * 
	 * @param workflowTo
	 */
	public WorkflowNodeTo getWorkflowNode(WorkflowTo workflowTo){
		return workflowService.findWorkflowNode(workflowTo.getId()).get();
	}

	/**
	 * 
	 * @param workflow
	 */
	public Set<WorkflowNodeTo> getWorkflowNodes(WorkflowTo workflow){
		return workflowService.findWorkflowNodes(workflow.getId());
	}

	/**
	 * 
	 * @param workflow
	 */
	public Set<WorkflowPhaseTo> getWorkflowPhases(WorkflowTo workflow){
		return workflowService.findWorkflowPhases(workflow.getId());
	}

	/**
	 * 
	 * @param workflowService
	 */
	@Autowired
	public WorkflowResolver(WorkflowService workflowService){
		this.workflowService = workflowService; 
	
	}

}