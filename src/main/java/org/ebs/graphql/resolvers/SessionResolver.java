///////////////////////////////////////////////////////////
//  SessionResolver.java
//  Macromedia ActionScript Implementation of the Class SessionResolver
//  Generated by Enterprise Architect
//  Created on:      17-May-2020 3:10:19 PM
//  Original author: EBRIONES
///////////////////////////////////////////////////////////

package org.ebs.graphql.resolvers;

import org.ebs.model.SessionModel;
import org.ebs.model.repos.InstanceRepository;
import org.ebs.model.repos.SessionRepository;
import org.ebs.model.repos.UserRepository;
import org.ebs.services.InstanceService;
import org.ebs.services.SessionService;
import org.ebs.services.UserService;
import org.ebs.services.to.InstanceTo;
import org.ebs.services.to.SessionTo;
import org.ebs.services.to.UserTo;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.core.convert.ConversionService;
import org.springframework.stereotype.Component;
import org.springframework.validation.annotation.Validated;

import com.coxautodev.graphql.tools.GraphQLResolver;

/**
 * @author EBRIONES
 * @version 1.0
 * @created 17-May-2020 3:10:19 PM
 */
@Component @Validated
public class SessionResolver implements GraphQLResolver<SessionTo> {

	private SessionService sessionService;
	private SessionRepository sessionRepository;
	@Autowired
	private ConversionService converter;
	private UserService userService;
	private UserRepository userRepository;
	private InstanceService instanceService;
	private InstanceRepository instanceRepository;

	/**
	 * 
	 * @param sessionTo
	 */
	public InstanceTo getInstance(SessionTo sessionTo){
		SessionModel sessionModel = sessionRepository.findById(sessionTo.getId()).get(); 
		 return instanceService.findInstance(sessionModel.getInstance().getId()).get();
	}

	/**
	 * 
	 * @param sessionTo
	 */
	public UserTo getUser(SessionTo sessionTo){
		SessionModel sessionModel = sessionRepository.findById(sessionTo.getId()).get(); 
		 return userService.findUser(sessionModel.getUser().getId()).get();
	}

	/**
	 * 
	 * @param sessionService
	 * @param instanceRepository
	 * @param instanceService
	 * @param userRepository
	 * @param userService
	 * @param sessionRepository
	 */
	@Autowired
	public SessionResolver(SessionService sessionService, InstanceRepository instanceRepository, InstanceService instanceService, UserRepository userRepository, UserService userService, SessionRepository sessionRepository){
		this.sessionService = sessionService; 
		this.sessionRepository = sessionRepository; 
		this.userService = userService; 
		this.userRepository = userRepository; 
		this.instanceService = instanceService; 
		this.instanceRepository = instanceRepository; 
	
	}

}