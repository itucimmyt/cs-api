///////////////////////////////////////////////////////////
//  LanguageResolver.java
//  Macromedia ActionScript Implementation of the Class LanguageResolver
//  Generated by Enterprise Architect
//  Created on:      17-May-2020 3:09:38 PM
//  Original author: EBRIONES
///////////////////////////////////////////////////////////

package org.ebs.graphql.resolvers;

import java.util.Set;
import java.util.stream.Collectors;

import org.ebs.model.repos.LanguageRepository;
import org.ebs.model.repos.TranslationRepository;
import org.ebs.services.LanguageService;
import org.ebs.services.TranslationService;
import org.ebs.services.to.LanguageTo;
import org.ebs.services.to.TranslationTo;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.core.convert.ConversionService;
import org.springframework.stereotype.Component;
import org.springframework.validation.annotation.Validated;

import com.coxautodev.graphql.tools.GraphQLResolver;

/**
 * @author EBRIONES
 * @version 1.0
 * @created 17-May-2020 3:09:38 PM
 */
@Component @Validated
public class LanguageResolver implements GraphQLResolver<LanguageTo> {

	private LanguageService languageService;
	private LanguageRepository languageRepository;
	@Autowired
	private ConversionService converter;
	private TranslationService translationService;
	private TranslationRepository translationRepository;

	/**
	 * 
	 * @param languageTo
	 */
	public Set<TranslationTo> getTranslations(LanguageTo languageTo){
		return translationRepository.findByLanguageId(languageTo.getId()).stream() 
		 .map(e -> converter.convert(e,TranslationTo.class)) 
		 .collect(Collectors.toSet());
	}

	/**
	 * 
	 * @param translationRepository
	 * @param translationService
	 * @param languageRepository
	 * @param languageService
	 */
	@Autowired
	public LanguageResolver(TranslationRepository translationRepository, TranslationService translationService, LanguageRepository languageRepository, LanguageService languageService){
		this.languageService = languageService; 
		this.languageRepository = languageRepository; 
		this.translationService = translationService; 
		this.translationRepository = translationRepository; 
	
	}

}