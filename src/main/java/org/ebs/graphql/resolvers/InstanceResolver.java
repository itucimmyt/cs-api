///////////////////////////////////////////////////////////
//  InstanceResolver.java
//  Macromedia ActionScript Implementation of the Class InstanceResolver
//  Generated by Enterprise Architect
//  Created on:      28-Apr-2020 12:07:01 AM
//  Original author: EBRIONES
///////////////////////////////////////////////////////////

package org.ebs.graphql.resolvers;

import org.springframework.validation.annotation.Validated;
import java.util.stream.Collectors;
import java.util.List;
import java.util.Optional;
import java.util.Set;
import org.springframework.core.convert.ConversionService;
import org.ebs.model.InstanceModel;
import org.ebs.services.to.InstanceTo;
import org.ebs.model.repos.InstanceRepository;
import org.ebs.services.InstanceService;
import org.ebs.model.repos.SessionRepository;
import org.ebs.services.SessionService;
import org.ebs.services.to.SessionTo;
import org.ebs.model.repos.AuditLogsRepository;
import org.ebs.services.AuditLogsService;
import org.ebs.services.to.AuditLogsTo;
import org.ebs.services.ComponentService;
import org.ebs.model.repos.ComponentRepository;
import org.ebs.services.to.ComponentTo;
import org.ebs.services.TenantService;
import org.ebs.model.repos.TenantRepository;
import org.ebs.services.to.TenantTo;
import com.coxautodev.graphql.tools.GraphQLResolver;
import org.springframework.stereotype.Component;
import org.springframework.beans.factory.annotation.Autowired;

/**
 * @author EBRIONES
 * @version 1.0
 * @created 28-Apr-2020 12:07:01 AM
 */
@Component @Validated
public class InstanceResolver implements GraphQLResolver<InstanceTo> {

	private InstanceService instanceService;
	private InstanceRepository instanceRepository;
	@Autowired
	private ConversionService converter;
	private SessionService sessionService;
	private SessionRepository sessionRepository;
	private AuditLogsService auditlogsService;
	private AuditLogsRepository auditlogsRepository;
	private ComponentService componentService;
	private ComponentRepository componentRepository;
	private TenantService tenantService;
	private TenantRepository tenantRepository;

	/**
	 * 
	 * @param instanceTo
	 */
	public Set<AuditLogsTo> getAuditLogss(InstanceTo instanceTo){
		return auditlogsRepository.findByInstanceId(instanceTo.getId()).stream() 
		 .map(e -> converter.convert(e,AuditLogsTo.class)) 
		 .collect(Collectors.toSet());
	}

	/**
	 * 
	 * @param instanceTo
	 */
	public ComponentTo getComponent(InstanceTo instanceTo){
		InstanceModel instanceModel = instanceRepository.findById(instanceTo.getId()).get(); 
		 return componentService.findComponent(instanceModel.getComponent().getId()).get();
	}

	/**
	 * 
	 * @param instanceTo
	 */
	public Set<SessionTo> getSessions(InstanceTo instanceTo){
		return sessionRepository.findByInstanceId(instanceTo.getId()).stream() 
		 .map(e -> converter.convert(e,SessionTo.class)) 
		 .collect(Collectors.toSet());
	}

	/**
	 * 
	 * @param instanceTo
	 */
	public TenantTo getTenant(InstanceTo instanceTo){
		InstanceModel instanceModel = instanceRepository.findById(instanceTo.getId()).get(); 
		 return tenantService.findTenant(instanceModel.getTenant().getId()).get();
	}

	/**
	 * 
	 * @param tenantRepository
	 * @param tenantService
	 * @param componentRepository
	 * @param componentService
	 * @param auditlogsRepository
	 * @param auditlogsService
	 * @param sessionRepository
	 * @param sessionService
	 * @param instanceRepository
	 * @param instanceService
	 */
	@Autowired
	public InstanceResolver(TenantRepository tenantRepository, TenantService tenantService, ComponentRepository componentRepository, ComponentService componentService, AuditLogsRepository auditlogsRepository, AuditLogsService auditlogsService, SessionRepository sessionRepository, SessionService sessionService, InstanceRepository instanceRepository, InstanceService instanceService){
		this.instanceService = instanceService; 
		this.instanceRepository = instanceRepository; 
		this.sessionService = sessionService; 
		this.sessionRepository = sessionRepository; 
		this.auditlogsService = auditlogsService; 
		this.auditlogsRepository = auditlogsRepository; 
		this.componentService = componentService; 
		this.componentRepository = componentRepository; 
		this.tenantService = tenantService; 
		this.tenantRepository = tenantRepository; 
	
	}

}