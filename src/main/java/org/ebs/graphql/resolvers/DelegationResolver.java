///////////////////////////////////////////////////////////
//  DelegationResolver.java
//  Macromedia ActionScript Implementation of the Class DelegationResolver
//  Generated by Enterprise Architect
//  Created on:      28-Apr-2020 11:58:12 PM
//  Original author: EBRIONES
///////////////////////////////////////////////////////////

package org.ebs.graphql.resolvers;

import com.coxautodev.graphql.tools.GraphQLResolver;
import org.springframework.stereotype.Component;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.validation.annotation.Validated;
import java.util.stream.Collectors;
import java.util.List;
import java.util.Optional;
import java.util.Set;
import org.springframework.core.convert.ConversionService;
import org.ebs.model.DelegationModel;
import org.ebs.services.to.DelegationTo;
import org.ebs.model.repos.DelegationRepository;
import org.ebs.services.DelegationService;
import org.ebs.services.UserService;
import org.ebs.model.repos.UserRepository;
import org.ebs.services.to.UserTo;

/**
 * @author EBRIONES
 * @version 1.0
 * @created 28-Apr-2020 11:58:12 PM
 */
@Component @Validated
public class DelegationResolver implements GraphQLResolver<DelegationTo> {

	private DelegationService delegationService;
	private DelegationRepository delegationRepository;
	@Autowired
	private ConversionService converter;
	private UserService userService;
	private UserRepository userRepository;

	/**
	 * 
	 * @param userRepository
	 * @param userService
	 * @param delegationRepository
	 * @param delegationService
	 */
	@Autowired
	public DelegationResolver(UserRepository userRepository, UserService userService, DelegationRepository delegationRepository, DelegationService delegationService){
		this.delegationService = delegationService; 
		this.delegationRepository = delegationRepository; 
		this.userService = userService; 
		this.userRepository = userRepository; 
	
	}

	/**
	 * 
	 * @param delegationTo
	 */
	public UserTo getUser(DelegationTo delegationTo){
		DelegationModel delegationModel = delegationRepository.findById(delegationTo.getId()).get(); 
		 return userService.findUser(delegationModel.getUser().getId()).get();
	}

}