///////////////////////////////////////////////////////////
//  DomainResolver.java
//  Macromedia ActionScript Implementation of the Class DomainResolver
//  Generated by Enterprise Architect
//  Created on:      02-May-2021 6:19:47 AM
//  Original author: EBRIONES
///////////////////////////////////////////////////////////

package org.ebs.graphql.resolvers;

import com.coxautodev.graphql.tools.GraphQLResolver;
import org.ebs.services.to.DomainTo;
import org.springframework.stereotype.Component;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.validation.annotation.Validated;
import java.util.Set;
import org.ebs.services.DomainService;
import org.ebs.services.to.EntityReferenceTo;
import org.ebs.services.to.HtmlTagTo;
import org.ebs.services.to.DomainInstanceTo;
import org.ebs.services.to.ProductTo;

/**
 * @author EBRIONES
 * @version 1.0
 * @created 02-May-2021 6:19:47 AM
 */
@Component @Validated
public class DomainResolver implements GraphQLResolver<DomainTo> {

	private DomainService domainService;

	/**
	 * 
	 * @param domainService
	 */
	@Autowired
	public DomainResolver(DomainService domainService){
		this.domainService = domainService; 
	
	}

	/**
	 * 
	 * @param domain
	 */
	public Set<DomainInstanceTo> getDomaininstances(DomainTo domain){
		return domainService.findDomainInstances(domain.getId());
	}

	/**
	 * 
	 * @param domainTo
	 */
	public Set<EntityReferenceTo> getEntityreferences(DomainTo domainTo){
		return domainService.findEntityReferences(domainTo.getId());
	}

	/**
	 * 
	 * @param domainTo
	 */
	public HtmlTagTo getHtmltag(DomainTo domainTo){
		return domainService.findHtmlTag(domainTo.getId()).get();
	}

	/**
	 * 
	 * @param domain
	 */
	public Set<ProductTo> getProducts(DomainTo domain){
		return domainService.findProducts(domain.getId());
	}

}