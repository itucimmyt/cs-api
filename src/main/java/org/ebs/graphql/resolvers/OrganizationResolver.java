///////////////////////////////////////////////////////////
//  OrganizationResolver.java
//  Macromedia ActionScript Implementation of the Class OrganizationResolver
//  Generated by Enterprise Architect
//  Created on:      17-May-2020 3:09:49 PM
//  Original author: EBRIONES
///////////////////////////////////////////////////////////

package org.ebs.graphql.resolvers;

import com.coxautodev.graphql.tools.GraphQLResolver;
import org.springframework.stereotype.Component;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.validation.annotation.Validated;
import java.util.stream.Collectors;
import java.util.List;
import java.util.Optional;
import java.util.Set;
import org.springframework.core.convert.ConversionService;
import org.ebs.model.OrganizationModel;
import org.ebs.services.to.OrganizationTo;
import org.ebs.model.repos.OrganizationRepository;
import org.ebs.services.OrganizationService;
import org.ebs.model.repos.TenantRepository;
import org.ebs.services.TenantService;
import org.ebs.services.to.TenantTo;
import org.ebs.services.CustomerService;
import org.ebs.model.repos.CustomerRepository;
import org.ebs.services.to.CustomerTo;

/**
 * @author EBRIONES
 * @version 1.0
 * @created 17-May-2020 3:09:49 PM
 */
@Component @Validated
public class OrganizationResolver implements GraphQLResolver<OrganizationTo> {

	private OrganizationService organizationService;
	private OrganizationRepository organizationRepository;
	@Autowired
	private ConversionService converter;
	private TenantService tenantService;
	private TenantRepository tenantRepository;
	private CustomerService customerService;
	private CustomerRepository customerRepository;

	/**
	 * 
	 * @param organizationTo
	 */
	public CustomerTo getCustomer(OrganizationTo organizationTo){
		OrganizationModel organizationModel = organizationRepository.findById(organizationTo.getId()).get(); 
		 return customerService.findCustomer(organizationModel.getCustomer().getId()).get();
	}

	/**
	 * 
	 * @param organizationTo
	 */
	public Set<CustomerTo> getCustomers(OrganizationTo organizationTo){
		return customerRepository.findByOrganizationId(organizationTo.getId()).stream() 
		 .map(e -> converter.convert(e,CustomerTo.class)) 
		 .collect(Collectors.toSet());
	}

	/**
	 * 
	 * @param organizationTo
	 */
	public Set<TenantTo> getTenants(OrganizationTo organizationTo){
		return tenantRepository.findByOrganizationId(organizationTo.getId()).stream() 
		 .map(e -> converter.convert(e,TenantTo.class)) 
		 .collect(Collectors.toSet());
	}

	/**
	 * 
	 * @param customerRepository
	 * @param customerService
	 * @param tenantRepository
	 * @param tenantService
	 * @param organizationRepository
	 * @param organizationService
	 */
	@Autowired
	public OrganizationResolver(CustomerRepository customerRepository, CustomerService customerService, TenantRepository tenantRepository, TenantService tenantService, OrganizationRepository organizationRepository, OrganizationService organizationService){
		this.organizationService = organizationService; 
		this.organizationRepository = organizationRepository; 
		this.tenantService = tenantService; 
		this.tenantRepository = tenantRepository; 
		this.customerService = customerService; 
		this.customerRepository = customerRepository; 
		this.customerService = customerService; 
		this.customerRepository = customerRepository; 
	
	}

}