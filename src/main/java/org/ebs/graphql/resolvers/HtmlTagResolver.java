///////////////////////////////////////////////////////////
//  HtmlTagResolver.java
//  Macromedia ActionScript Implementation of the Class HtmlTagResolver
//  Generated by Enterprise Architect
//  Created on:      28-Apr-2020 12:07:00 AM
//  Original author: EBRIONES
///////////////////////////////////////////////////////////

package org.ebs.graphql.resolvers;

import java.util.List;
import java.util.Optional;
import java.util.Set;
import org.springframework.core.convert.ConversionService;
import org.ebs.model.HtmlTagModel;
import org.ebs.services.to.HtmlTagTo;
import org.ebs.model.repos.HtmlTagRepository;
import org.ebs.services.HtmlTagService;
import org.ebs.model.repos.TranslationRepository;
import org.ebs.services.TranslationService;
import org.ebs.services.to.TranslationTo;
import com.coxautodev.graphql.tools.GraphQLResolver;
import org.springframework.stereotype.Component;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.validation.annotation.Validated;
import java.util.stream.Collectors;

/**
 * @author EBRIONES
 * @version 1.0
 * @created 28-Apr-2020 12:07:00 AM
 */
@Component @Validated
public class HtmlTagResolver implements GraphQLResolver<HtmlTagTo> {

	private HtmlTagService htmltagService;
	private HtmlTagRepository htmltagRepository;
	@Autowired
	private ConversionService converter;
	private TranslationService translationService;
	private TranslationRepository translationRepository;

	/**
	 * 
	 * @param htmltagTo
	 */
	public Set<TranslationTo> getTranslations(HtmlTagTo htmltagTo){
		return translationRepository.findByHtmltagId(htmltagTo.getId()).stream() 
		 .map(e -> converter.convert(e,TranslationTo.class)) 
		 .collect(Collectors.toSet());
	}

	/**
	 * 
	 * @param translationService
	 * @param htmltagRepository
	 * @param htmltagService
	 * @param translationRepository
	 */
	@Autowired
	public HtmlTagResolver(TranslationService translationService, HtmlTagRepository htmltagRepository, HtmlTagService htmltagService, TranslationRepository translationRepository){
		this.htmltagService = htmltagService; 
		this.htmltagRepository = htmltagRepository; 
		this.translationService = translationService; 
		this.translationRepository = translationRepository; 
	
	}

}