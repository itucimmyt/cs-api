///////////////////////////////////////////////////////////
//  VendorResolver.java
//  Macromedia ActionScript Implementation of the Class VendorResolver
//  Generated by Enterprise Architect
//  Created on:      04-Sep-2020 10:06:27 AM
//  Original author: EBRIONES
///////////////////////////////////////////////////////////

package org.ebs.graphql.resolvers;

import com.coxautodev.graphql.tools.GraphQLResolver;
import org.ebs.services.to.VendorTo;
import org.springframework.stereotype.Component;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.validation.annotation.Validated;
import java.util.Set;
import org.ebs.services.VendorService;
import org.ebs.services.to.DataFormatTo;
import org.ebs.services.to.ServiceTo;
import org.ebs.services.to.TechnologyPlatformTo;
import org.ebs.services.to.MarkerTo;
import org.ebs.services.to.PersonTo;

/**
 * @author EBRIONES
 * @version 1.0
 * @created 04-Sep-2020 10:06:27 AM
 */
@Component @Validated
public class VendorResolver implements GraphQLResolver<VendorTo> {

	private VendorService vendorService;

	/**
	 * 
	 * @param vendorTo
	 */
	public DataFormatTo getDataformat(VendorTo vendorTo){
		return vendorService.finddataformat(vendorTo.getId()).get();
	}

	/**
	 * 
	 * @param vendorTo
	 */
	public Set<MarkerTo> getMarkers(VendorTo vendorTo){
		return vendorService.findmarkers(vendorTo.getId());
	}

	/**
	 * 
	 * @param vendorTo
	 */
	public PersonTo getPerson(VendorTo vendorTo){
		return vendorService.findperson(vendorTo.getId()).get();
	}

	/**
	 * 
	 * @param vendorTo
	 */
	public Set<ServiceTo> getServices(VendorTo vendorTo){
		return vendorService.findservices(vendorTo.getId());
	}

	/**
	 * 
	 * @param vendorTo
	 */
	public TechnologyPlatformTo getTechnologyplatform(VendorTo vendorTo){
		return vendorService.findtechnologyplatform(vendorTo.getId()).get();
	}

	/**
	 * 
	 * @param vendorService
	 */
	@Autowired
	public VendorResolver(VendorService vendorService){
		this.vendorService = vendorService; 
	
	}

}