///////////////////////////////////////////////////////////
//  NodeResolver.java
//  Macromedia ActionScript Implementation of the Class NodeResolver
//  Generated by Enterprise Architect
//  Created on:      13-Mar-2021 12:02:39 AM
//  Original author: EBRIONES
///////////////////////////////////////////////////////////

package org.ebs.graphql.resolvers;

import com.coxautodev.graphql.tools.GraphQLResolver;
import org.ebs.services.to.NodeTo;
import org.springframework.stereotype.Component;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.validation.annotation.Validated;
import java.util.Set;
import org.ebs.services.NodeService;
import org.ebs.services.to.StageTo;
import org.ebs.services.to.WorkflowTo;
import org.ebs.services.to.ProductFunctionTo;
import org.ebs.services.to.EntityReferenceTo;
import org.ebs.services.to.EventTo;
import org.ebs.services.to.HtmlTagTo;
import org.ebs.services.to.ProcessTo;
import org.ebs.services.to.ProductTo;
import org.ebs.services.to.NodeCfTo;

/**
 * @author EBRIONES
 * @version 1.0
 * @created 13-Mar-2021 12:02:39 AM
 */
@Component @Validated
public class NodeResolver implements GraphQLResolver<NodeTo> {

	private NodeService nodeService;

	/**
	 * 
	 * @param nodeTo
	 */
	public EntityReferenceTo getEntityreference(NodeTo nodeTo){
		return nodeService.findEntityReference(nodeTo.getId()).get();
	}

	/**
	 * 
	 * @param node
	 */
	public Set<EventTo> getEvents(NodeTo node){
		return nodeService.findEvents(node.getId());
	}

	/**
	 * 
	 * @param nodeTo
	 */
	public HtmlTagTo getHtmltag(NodeTo nodeTo){
		return nodeService.findHtmlTag(nodeTo.getId()).get();
	}

	/**
	 * 
	 * @param node
	 */
	public Set<NodeCfTo> getNodecfs(NodeTo node){
		return nodeService.findNodeCfs(node.getId());
	}

	/**
	 * 
	 * @param nodeTo
	 */
	public ProcessTo getProcess(NodeTo nodeTo){
		return nodeService.findProcess(nodeTo.getId()).get();
	}

	/**
	 * 
	 * @param nodeTo
	 */
	public ProductTo getProduct(NodeTo nodeTo){
		return nodeService.findProduct(nodeTo.getId()).get();
	}

	/**
	 * 
	 * @param node
	 */
	public Set<ProductFunctionTo> getProductfunctions(NodeTo node){
		return nodeService.findProductFunctions(node.getId());
	}

	/**
	 * 
	 * @param nodeTo
	 */
	public Set<StageTo> getStages(NodeTo nodeTo){
		return nodeService.findStages(nodeTo.getId());
	}

	/**
	 * 
	 * @param nodeTo
	 */
	public WorkflowTo getWorkflow(NodeTo nodeTo){
		return nodeService.findWorkflow(nodeTo.getId()).get();
	}

	/**
	 * 
	 * @param node
	 */
	public Set<WorkflowTo> getWorkflows(NodeTo node){
		return nodeService.findWorkflows(node.getId());
	}

	/**
	 * 
	 * @param nodeService
	 */
	@Autowired
	public NodeResolver(NodeService nodeService){
		this.nodeService = nodeService; 
	
	}

}