///////////////////////////////////////////////////////////
//  ModuleResolver.java
//  Macromedia ActionScript Implementation of the Class ModuleResolver
//  Generated by Enterprise Architect
//  Created on:      07-Aug-2020 3:00:05 PM
//  Original author: EBRIONES
///////////////////////////////////////////////////////////

package org.ebs.graphql.resolvers;

import com.coxautodev.graphql.tools.GraphQLResolver;
import org.ebs.services.to.ModuleTo;
import org.springframework.stereotype.Component;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.validation.annotation.Validated;
import java.util.Set;
import org.ebs.services.ModuleService;
import org.ebs.services.to.ActionTo;
import org.ebs.services.to.ComponentTo;
import org.ebs.services.to.HtmlTagTo;
import org.ebs.services.to.WorkflowNodeTo;

/**
 * @author EBRIONES
 * @version 1.0
 * @created 07-Aug-2020 3:00:05 PM
 */
@Component @Validated
public class ModuleResolver implements GraphQLResolver<ModuleTo> {

	private ModuleService moduleService;

	/**
	 * 
	 * @param module
	 */
	public Set<ActionTo> getActions(ModuleTo module){
		return moduleService.findActions(module.getId());
	}

	/**
	 * 
	 * @param moduleTo
	 */
	public ComponentTo getComponent(ModuleTo moduleTo){
		return moduleService.findComponent(moduleTo.getId()).get();
	}

	/**
	 * 
	 * @param moduleTo
	 */
	public HtmlTagTo getHtmltag(ModuleTo moduleTo){
		return moduleService.findHtmlTag(moduleTo.getId()).get();
	}

	/**
	 * 
	 * @param module
	 */
	public Set<WorkflowNodeTo> getWorkflownodes(ModuleTo module){
		return moduleService.findWorkflowNodes(module.getId());
	}

	/**
	 * 
	 * @param moduleService
	 */
	@Autowired
	public ModuleResolver(ModuleService moduleService){
		this.moduleService = moduleService; 
	
	}

}