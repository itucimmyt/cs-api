///////////////////////////////////////////////////////////
//  ComponentResolver.java
//  Macromedia ActionScript Implementation of the Class ComponentResolver
//  Generated by Enterprise Architect
//  Created on:      27-Apr-2020 9:47:36 AM
//  Original author: EBRIONES
///////////////////////////////////////////////////////////

package org.ebs.graphql.resolvers;

import com.coxautodev.graphql.tools.GraphQLResolver;
import org.springframework.stereotype.Component;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.validation.annotation.Validated;
import java.util.stream.Collectors;
import java.util.List;
import java.util.Optional;
import java.util.Set;
import org.springframework.core.convert.ConversionService;
import org.ebs.model.ComponentModel;
import org.ebs.services.to.ComponentTo;
import org.ebs.model.repos.ComponentRepository;
import org.ebs.services.ComponentService;
import org.ebs.model.repos.InstanceRepository;
import org.ebs.services.InstanceService;
import org.ebs.services.to.InstanceTo;
import org.ebs.model.repos.MessageRepository;
import org.ebs.services.MessageService;
import org.ebs.services.to.MessageTo;
import org.ebs.model.repos.ModuleRepository;
import org.ebs.services.ModuleService;
import org.ebs.services.to.ModuleTo;

/**
 * @author EBRIONES
 * @version 1.0
 * @created 27-Apr-2020 9:47:36 AM
 */
@Component @Validated
public class ComponentResolver implements GraphQLResolver<ComponentTo> {

	private ComponentRepository componentRepository;
	private ComponentService componentService;
	@Autowired
	private ConversionService converter;
	private InstanceRepository instanceRepository;
	private InstanceService instanceService;
	private MessageRepository messageRepository;
	private MessageService messageService;
	private ModuleRepository moduleRepository;
	private ModuleService moduleService;

	/**
	 * 
	 * @param moduleRepository
	 * @param moduleService
	 * @param messageRepository
	 * @param messageService
	 * @param instanceRepository
	 * @param instanceService
	 * @param componentRepository
	 * @param componentService
	 */
	@Autowired
	public ComponentResolver(ModuleRepository moduleRepository, ModuleService moduleService, MessageRepository messageRepository, MessageService messageService, InstanceRepository instanceRepository, InstanceService instanceService, ComponentRepository componentRepository, ComponentService componentService){
		this.componentService = componentService; 
		this.componentRepository = componentRepository; 
		this.instanceService = instanceService; 
		this.instanceRepository = instanceRepository; 
		this.messageService = messageService; 
		this.messageRepository = messageRepository; 
		this.moduleService = moduleService; 
		this.moduleRepository = moduleRepository; 
	
	}

	/**
	 * 
	 * @param componentTo
	 */
	public Set<InstanceTo> getInstances(ComponentTo componentTo){
		return instanceRepository.findByComponentId(componentTo.getId()).stream() 
		 .map(e -> converter.convert(e,InstanceTo.class)) 
		 .collect(Collectors.toSet());
	}

	/**
	 * 
	 * @param componentTo
	 */
	public Set<MessageTo> getMessages(ComponentTo componentTo){
		return messageRepository.findByComponentId(componentTo.getId()).stream() 
		 .map(e -> converter.convert(e,MessageTo.class)) 
		 .collect(Collectors.toSet());
	}

	/**
	 * 
	 * @param componentTo
	 */
	public Set<ModuleTo> getModules(ComponentTo componentTo){
		return moduleRepository.findByComponentId(componentTo.getId()).stream() 
		 .map(e -> converter.convert(e,ModuleTo.class)) 
		 .collect(Collectors.toSet());
	}

}