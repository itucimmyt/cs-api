///////////////////////////////////////////////////////////
//  WorkflowNodeResolver.java
//  Macromedia ActionScript Implementation of the Class WorkflowNodeResolver
//  Generated by Enterprise Architect
//  Created on:      07-Sep-2020 8:12:43 AM
//  Original author: EBRIONES
// Modified by: JAROJAS 31-Aug-2020
///////////////////////////////////////////////////////////

package org.ebs.graphql.resolvers;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.validation.annotation.Validated;
import java.util.Set;
import org.ebs.services.WorkflowNodeService;
import org.ebs.services.to.WorkflowStageTo;
import org.ebs.services.to.WorkflowTo;
import org.ebs.services.to.ActionTo;
import org.ebs.services.to.EntityReferenceTo;
import org.ebs.services.to.WorkflowEventTo;
import org.ebs.services.to.HtmlTagTo;
import org.ebs.services.to.ProcessTo;
import org.ebs.services.to.ModuleTo;
import org.ebs.services.to.WorkflowNodeCFTo;
import com.coxautodev.graphql.tools.GraphQLResolver;
import org.ebs.services.to.WorkflowNodeTo;
import org.springframework.stereotype.Component;

/**
 * @author EBRIONES
 * @version 1.0
<<<<<<< HEAD
 * @created 07-Sep-2020 8:12:43 AM
=======
 * @created 09-Aug-2020 4:52:02 PM
 * modified by JAROJAS 31-Aug-2020
>>>>>>> 568e9ead4a84c1e3c26732d642869d5d1811b60f
 */
@Component @Validated
public class WorkflowNodeResolver implements GraphQLResolver<WorkflowNodeTo> {

	private WorkflowNodeService workflowNodeService;

	/**
	 * 
	 * @param workflowNode
	 */
	public Set<ActionTo> getActions(WorkflowNodeTo workflowNode){
		return workflowNodeService.findActions(workflowNode.getId());
	}

	/**
	 * 
	 * @param workflowNodeTo
	 */
	public EntityReferenceTo getEntityReference(WorkflowNodeTo workflowNodeTo){
		return workflowNodeService.findEntityReference(workflowNodeTo.getId()).get();
	}

	/**
	 * 
	 * @param workflowNodeTo
	 */
	public HtmlTagTo getHtmlTag(WorkflowNodeTo workflowNodeTo){
		return workflowNodeService.findHtmlTag(workflowNodeTo.getId()).get();
	}

	/**
	 * 
	 * @param workflowNodeTo
	 */
<<<<<<< HEAD
	public ModuleTo getModule(WorkflowNodeTo workflowNodeTo){
		return workflowNodeService.findModule(workflowNodeTo.getId()).get();
=======
	public ModuleTo getModule(WorkflowNodeTo workflownodeTo){
		return workflownodeService.findmodule(workflownodeTo.getId()).orElse(null);
>>>>>>> 568e9ead4a84c1e3c26732d642869d5d1811b60f
	}

	/**
	 * 
	 * @param workflowNodeTo
	 */
<<<<<<< HEAD
	public ProcessTo getProcess(WorkflowNodeTo workflowNodeTo){
		return workflowNodeService.findProcess(workflowNodeTo.getId()).get();
=======
	public ProcessTo getProcess(WorkflowNodeTo workflownodeTo){
		return workflownodeService.findprocess(workflownodeTo.getId()).orElse(null);
>>>>>>> 568e9ead4a84c1e3c26732d642869d5d1811b60f
	}

	/**
	 * 
	 * @param workflowNodeTo
	 */
<<<<<<< HEAD
	public WorkflowTo getWorkflow(WorkflowNodeTo workflowNodeTo){
		return workflowNodeService.findWorkflow(workflowNodeTo.getId()).get();
=======
	public WorkflowTo getWorkflow(WorkflowNodeTo workflownodeTo){
		return workflownodeService.findworkflow(workflownodeTo.getId()).orElse(null);
>>>>>>> 568e9ead4a84c1e3c26732d642869d5d1811b60f
	}

	/**
	 * 
	 * @param workflowNode
	 */
	public Set<WorkflowEventTo> getWorkflowEvents(WorkflowNodeTo workflowNode){
		return workflowNodeService.findWorkflowEvents(workflowNode.getId());
	}

	/**
	 * 
	 * @param workflowNode
	 */
	public Set<WorkflowNodeCFTo> getWorkflowNodeCFs(WorkflowNodeTo workflowNode){
		return workflowNodeService.findWorkflowNodeCFs(workflowNode.getId());
	}

	/**
	 * 
	 * @param workflowNode
	 */
	public Set<WorkflowTo> getWorkflows(WorkflowNodeTo workflowNode){
		return workflowNodeService.findWorkflows(workflowNode.getId());
	}

	/**
	 * 
	 * @param workflownodeTo
	 */
	public Set<WorkflowStageTo> getWorkflowStages(WorkflowNodeTo workflownodeTo){
		return workflowNodeService.findWorkflowStages(workflownodeTo.getId());
	}

	/**
	 * 
	 * @param workflownodeService
	 */
	@Autowired
	public WorkflowNodeResolver(WorkflowNodeService workflownodeService){
<<<<<<< HEAD
		this.workflowNodeService = workflownodeService; 
	
=======
		this.workflownodeService = workflownodeService;
>>>>>>> 568e9ead4a84c1e3c26732d642869d5d1811b60f
	}

}