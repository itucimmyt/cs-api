///////////////////////////////////////////////////////////
//  SchemeResolver.java
//  Macromedia ActionScript Implementation of the Class SchemeResolver
//  Generated by Enterprise Architect
//  Created on:      17-May-2020 3:10:12 PM
//  Original author: EBRIONES
///////////////////////////////////////////////////////////

package org.ebs.graphql.resolvers;

import java.util.Optional;
import java.util.Set;
import org.springframework.core.convert.ConversionService;
import org.ebs.model.SchemeModel;
import org.ebs.services.to.SchemeTo;
import org.ebs.model.repos.SchemeRepository;
import org.ebs.services.SchemeService;
import org.ebs.services.PhaseService;
import org.ebs.model.repos.PhaseRepository;
import org.ebs.services.to.PhaseTo;
import org.ebs.model.repos.StageRepository;
import org.ebs.services.StageService;
import org.ebs.services.to.StageTo;
import org.ebs.services.PipelineService;
import org.ebs.model.repos.PipelineRepository;
import org.ebs.services.to.PipelineTo;
import com.coxautodev.graphql.tools.GraphQLResolver;
import org.springframework.stereotype.Component;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.validation.annotation.Validated;
import java.util.stream.Collectors;
import java.util.List;

/**
 * @author EBRIONES
 * @version 1.0
 * @created 17-May-2020 3:10:12 PM
 */
@Component @Validated
public class SchemeResolver implements GraphQLResolver<SchemeTo> {

	private SchemeService schemeService;
	private SchemeRepository schemeRepository;
	@Autowired
	private ConversionService converter;
	private PhaseService phaseService;
	private PhaseRepository phaseRepository;
	private StageService stageService;
	private StageRepository stageRepository;
	private PipelineService pipelineService;
	private PipelineRepository pipelineRepository;

	/**
	 * 
	 * @param schemeTo
	 */
	public PipelineTo getPipeline(SchemeTo schemeTo){
		SchemeModel schemeModel = schemeRepository.findById(schemeTo.getId()).get(); 
		 return pipelineService.findPipeline(schemeModel.getPipeline().getId()).get();
	}

	/**
	 * 
	 * @param pipelineRepository
	 * @param pipelineService
	 * @param stageRepository
	 * @param stageService
	 * @param phaseRepository
	 * @param phaseService
	 * @param schemeRepository
	 * @param schemeService
	 */
	@Autowired
	public SchemeResolver(PipelineRepository pipelineRepository, PipelineService pipelineService, StageRepository stageRepository, StageService stageService, PhaseRepository phaseRepository, PhaseService phaseService, SchemeRepository schemeRepository, SchemeService schemeService){
		this.schemeService = schemeService; 
		this.schemeRepository = schemeRepository; 
		this.phaseService = phaseService; 
		this.phaseRepository = phaseRepository; 
		this.stageService = stageService; 
		this.stageRepository = stageRepository; 
		this.pipelineService = pipelineService; 
		this.pipelineRepository = pipelineRepository; 
	
	}

}