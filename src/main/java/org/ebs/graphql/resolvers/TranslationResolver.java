///////////////////////////////////////////////////////////
//  TranslationResolver.java
//  Macromedia ActionScript Implementation of the Class TranslationResolver
//  Generated by Enterprise Architect
//  Created on:      27-Apr-2020 9:47:55 AM
//  Original author: EBRIONES
///////////////////////////////////////////////////////////

package org.ebs.graphql.resolvers;

import com.coxautodev.graphql.tools.GraphQLResolver;
import org.springframework.stereotype.Component;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.validation.annotation.Validated;
import java.util.stream.Collectors;
import java.util.List;
import java.util.Optional;
import java.util.Set;
import org.springframework.core.convert.ConversionService;
import org.ebs.model.TranslationModel;
import org.ebs.services.to.TranslationTo;
import org.ebs.model.repos.TranslationRepository;
import org.ebs.services.TranslationService;
import org.ebs.services.AlertService;
import org.ebs.model.repos.AlertRepository;
import org.ebs.services.to.AlertTo;
import org.ebs.services.LanguageService;
import org.ebs.model.repos.LanguageRepository;
import org.ebs.services.to.LanguageTo;
import org.ebs.services.MessageService;
import org.ebs.model.repos.MessageRepository;
import org.ebs.services.to.MessageTo;
import org.ebs.services.HtmlTagService;
import org.ebs.model.repos.HtmlTagRepository;
import org.ebs.services.to.HtmlTagTo;
import org.ebs.services.ModuleService;
import org.ebs.model.repos.ModuleRepository;
import org.ebs.services.to.ModuleTo;

/**
 * @author EBRIONES
 * @version 1.0
 * @created 27-Apr-2020 9:47:55 AM
 */
@Component @Validated
public class TranslationResolver implements GraphQLResolver<TranslationTo> {

	private AlertRepository alertRepository;
	private AlertService alertService;
	@Autowired
	private ConversionService converter;
	private HtmlTagRepository htmltagRepository;
	private HtmlTagService htmltagService;
	private LanguageRepository languageRepository;
	private LanguageService languageService;
	private MessageRepository messageRepository;
	private MessageService messageService;
	private ModuleRepository moduleRepository;
	private ModuleService moduleService;
	private TranslationRepository translationRepository;
	private TranslationService translationService;

	/**
	 * 
	 * @param translationTo
	 */
	public AlertTo getAlert(TranslationTo translationTo){
		TranslationModel translationModel = translationRepository.findById(translationTo.getId()).get(); 
		 return alertService.findAlert(translationModel.getAlert().getId()).get();
	}

	/**
	 * 
	 * @param translationTo
	 */
	public HtmlTagTo getHtmlTag(TranslationTo translationTo){
		TranslationModel translationModel = translationRepository.findById(translationTo.getId()).get(); 
		 return htmltagService.findHtmlTag(translationModel.getHtmlTag().getId()).get();
	}

	/**
	 * 
	 * @param translationTo
	 */
	public LanguageTo getLanguage(TranslationTo translationTo){
		TranslationModel translationModel = translationRepository.findById(translationTo.getId()).get(); 
		 return languageService.findLanguage(translationModel.getLanguage().getId()).get();
	}

	/**
	 * 
	 * @param translationTo
	 */
	public MessageTo getMessage(TranslationTo translationTo){
		TranslationModel translationModel = translationRepository.findById(translationTo.getId()).get(); 
		 return messageService.findMessage(translationModel.getMessage().getId()).get();
	}

	/**
	 * 
	 * @param translationTo
	 */
	public ModuleTo getModule(TranslationTo translationTo){
		TranslationModel translationModel = translationRepository.findById(translationTo.getId()).get(); 
		 return moduleService.findModule(translationModel.getModule().getId()).get();
	}

	/**
	 * 
	 * @param htmltagRepository
	 * @param translationRepository
	 * @param alertService
	 * @param alertRepository
	 * @param languageService
	 * @param languageRepository
	 * @param messageService
	 * @param translationService
	 * @param htmltagService
	 * @param moduleService
	 * @param moduleRepository
	 * @param messageRepository
	 */
	@Autowired
	public TranslationResolver(HtmlTagRepository htmltagRepository, TranslationRepository translationRepository, AlertService alertService, AlertRepository alertRepository, LanguageService languageService, LanguageRepository languageRepository, MessageService messageService, TranslationService translationService, HtmlTagService htmltagService, ModuleService moduleService, ModuleRepository moduleRepository, MessageRepository messageRepository){
		this.translationService = translationService; 
		this.translationRepository = translationRepository; 
		this.alertService = alertService; 
		this.alertRepository = alertRepository; 
		this.languageService = languageService; 
		this.languageRepository = languageRepository; 
		this.messageService = messageService; 
		this.messageRepository = messageRepository; 
		this.htmltagService = htmltagService; 
		this.htmltagRepository = htmltagRepository; 
		this.moduleService = moduleService; 
		this.moduleRepository = moduleRepository; 
	
	}

}