///////////////////////////////////////////////////////////
//  AlertResolver.java
//  Macromedia ActionScript Implementation of the Class AlertResolver
//  Generated by Enterprise Architect
//  Created on:      17-May-2020 3:09:13 PM
//  Original author: EBRIONES
///////////////////////////////////////////////////////////

package org.ebs.graphql.resolvers;

import java.util.Set;
import java.util.stream.Collectors;

import org.ebs.model.repos.AlertRepository;
import org.ebs.model.repos.AlertRuleRepository;
import org.ebs.model.repos.PreferenceRepository;
import org.ebs.model.repos.TranslationRepository;
import org.ebs.services.AlertRuleService;
import org.ebs.services.AlertService;
import org.ebs.services.PreferenceService;
import org.ebs.services.TranslationService;
import org.ebs.services.to.AlertRuleTo;
import org.ebs.services.to.AlertTo;
import org.ebs.services.to.PreferenceTo;
import org.ebs.services.to.TranslationTo;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.core.convert.ConversionService;
import org.springframework.stereotype.Component;
import org.springframework.validation.annotation.Validated;

import com.coxautodev.graphql.tools.GraphQLResolver;

/**
 * @author EBRIONES
 * @version 1.0
 * @created 17-May-2020 3:09:13 PM
 */
@Component @Validated
public class AlertResolver implements GraphQLResolver<AlertTo> {

	private AlertService alertService;
	private AlertRepository alertRepository;
	@Autowired
	private ConversionService converter;
	private AlertRuleService alertruleService;
	private AlertRuleRepository alertruleRepository;
	private TranslationService translationService;
	private TranslationRepository translationRepository;
	private PreferenceService preferenceService;
	private PreferenceRepository preferenceRepository;

	/**
	 * 
	 * @param preferenceRepository
	 * @param preferenceService
	 * @param translationRepository
	 * @param translationService
	 * @param alertruleRepository
	 * @param alertruleService
	 * @param alertRepository
	 * @param alertService
	 */
	@Autowired
	public AlertResolver(PreferenceRepository preferenceRepository, PreferenceService preferenceService, TranslationRepository translationRepository, TranslationService translationService, AlertRuleRepository alertruleRepository, AlertRuleService alertruleService, AlertRepository alertRepository, AlertService alertService){
		this.alertService = alertService; 
		this.alertRepository = alertRepository; 
		this.alertruleService = alertruleService; 
		this.alertruleRepository = alertruleRepository; 
		this.translationService = translationService; 
		this.translationRepository = translationRepository; 
		this.preferenceService = preferenceService; 
		this.preferenceRepository = preferenceRepository; 
	
	}

	/**
	 * 
	 * @param alertTo
	 */
	public Set<AlertRuleTo> getAlertRules(AlertTo alertTo){
		return alertruleRepository.findByAlertId(alertTo.getId()).stream() 
		 .map(e -> converter.convert(e,AlertRuleTo.class)) 
		 .collect(Collectors.toSet());
	}

	/**
	 * 
	 * @param alertTo
	 */
	public Set<PreferenceTo> getPreferences(AlertTo alertTo){
		return preferenceRepository.findByAlertId(alertTo.getId()).stream() 
		 .map(e -> converter.convert(e,PreferenceTo.class)) 
		 .collect(Collectors.toSet());
	}

	/**
	 * 
	 * @param alertTo
	 */
	public Set<TranslationTo> getTranslations(AlertTo alertTo){
		return translationRepository.findByAlertId(alertTo.getId()).stream() 
		 .map(e -> converter.convert(e,TranslationTo.class)) 
		 .collect(Collectors.toSet());
	}

}