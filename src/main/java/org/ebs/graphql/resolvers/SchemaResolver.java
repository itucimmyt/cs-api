///////////////////////////////////////////////////////////
//  SchemaResolver.java
//  Macromedia ActionScript Implementation of the Class SchemaResolver
//  Generated by Enterprise Architect
//  Created on:      17-May-2020 3:10:11 PM
//  Original author: EBRIONES
///////////////////////////////////////////////////////////

package org.ebs.graphql.resolvers;

import com.coxautodev.graphql.tools.GraphQLResolver;
import org.springframework.stereotype.Component;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.validation.annotation.Validated;
import java.util.stream.Collectors;
import java.util.List;
import java.util.Optional;
import java.util.Set;
import org.springframework.core.convert.ConversionService;
import org.ebs.model.SchemaModel;
import org.ebs.services.to.SchemaTo;
import org.ebs.model.repos.SchemaRepository;
import org.ebs.services.SchemaService;
import org.ebs.services.PipelineService;
import org.ebs.model.repos.PipelineRepository;
import org.ebs.services.to.PipelineTo;
import org.ebs.model.repos.StageRepository;
import org.ebs.services.StageService;
import org.ebs.services.to.StageTo;

/**
 * @author EBRIONES
 * @version 1.0
 * @created 17-May-2020 3:10:11 PM
 */
@Component @Validated
public class SchemaResolver implements GraphQLResolver<SchemaTo> {

	private SchemaService schemaService;
	private SchemaRepository schemaRepository;
	@Autowired
	private ConversionService converter;
	private PipelineService pipelineService;
	private PipelineRepository pipelineRepository;
	private StageService stageService;
	private StageRepository stageRepository;

	/**
	 * 
	 * @param schemaTo
	 */
	public PipelineTo getPipeline(SchemaTo schemaTo){
		SchemaModel schemaModel = schemaRepository.findById(schemaTo.getId()).get(); 
		 return pipelineService.findPipeline(schemaModel.getPipeline().getId()).get();
	}

	/**
	 * 
	 * @param stageRepository
	 * @param stageService
	 * @param pipelineRepository
	 * @param pipelineService
	 * @param schemaRepository
	 * @param schemaService
	 */
	@Autowired
	public SchemaResolver(StageRepository stageRepository, StageService stageService, PipelineRepository pipelineRepository, PipelineService pipelineService, SchemaRepository schemaRepository, SchemaService schemaService){
		this.schemaService = schemaService; 
		this.schemaRepository = schemaRepository; 
		this.pipelineService = pipelineService; 
		this.pipelineRepository = pipelineRepository; 
		this.stageService = stageService; 
		this.stageRepository = stageRepository; 
	
	}

}