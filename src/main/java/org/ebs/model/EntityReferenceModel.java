///////////////////////////////////////////////////////////
//  EntityReferenceModel.java
//  Macromedia ActionScript Implementation of the Class EntityReferenceModel
//  Generated by Enterprise Architect
//  Created on:      20-Aug-2020 1:05:43 PM
//  Original author: EBRIONES
///////////////////////////////////////////////////////////

package org.ebs.model;

import org.ebs.util.Auditable;
import javax.persistence.ManyToMany;
import javax.persistence.FetchType;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;

/**
 * @author EBRIONES
 * @version 1.0
 * @created 20-Aug-2020 1:05:43 PM
 */
@Entity @Table(name="EntityReference",schema="tenant")
public class EntityReferenceModel extends Auditable {

	private static final long serialVersionUID = -528251442;
	@Column(name="tenant_id")
	private int tenant;
	@Column(name="entity")
	private String entity;
	@Column(name="textfield")
	private String textfield;
	@Column(name="valuefield")
	private String valuefield;
	@Column(name="storefield")
	private String storefield;
	@Column(name="entityschema")
	private String entityschema;
	@GeneratedValue(strategy= GenerationType.IDENTITY) @Id @Column
	private int id;
	@OneToMany(mappedBy = "entityreference",fetch=FetchType.LAZY, cascade = CascadeType.ALL)
	Set<AttributesModel> attributess;
	@ManyToMany(mappedBy="entityreferences")
	Set<EmailTemplateModel> emailtemplates;
	@OneToMany(mappedBy = "entityreference",fetch=FetchType.LAZY, cascade = CascadeType.ALL)
	Set<WorkflowModel> workflows;
	@OneToMany(mappedBy = "entityreference",fetch=FetchType.LAZY, cascade = CascadeType.ALL)
	Set<SegmentModel> segments;
	@OneToMany(mappedBy = "entityreference",fetch=FetchType.LAZY, cascade = CascadeType.ALL)
	Set<WorkflowNodeModel> workflownodes;
	@ManyToMany(mappedBy="entityreferences")
	Set<NumberSequenceRuleModel> numbersequencerules;
	@OneToMany(mappedBy = "entityreference",fetch=FetchType.LAZY, cascade = CascadeType.ALL)
	Set<WorkflowNodeCFModel> workflownodecfs;

	public Set<AttributesModel> getattributess(){
		return attributess;
	}

	public Set<EmailTemplateModel> getemailtemplates(){
		return emailtemplates;
	}

	public String getentity(){
		return entity;
	}

	public String getentityschema(){
		return entityschema;
	}

	public int getId(){
		return id;
	}

	public Set<NumberSequenceRuleModel> getnumbersequencerules(){
		return numbersequencerules;
	}

	public Set<SegmentModel> getsegments(){
		return segments;
	}

	public String getstorefield(){
		return storefield;
	}

	public int getTenant(){
		return tenant;
	}

	public String gettextfield(){
		return textfield;
	}

	public String getvaluefield(){
		return valuefield;
	}

	public Set<WorkflowNodeCFModel> getworkflownodecfs(){
		return workflownodecfs;
	}

	public Set<WorkflowNodeModel> getworkflownodes(){
		return workflownodes;
	}

	public Set<WorkflowModel> getworkflows(){
		return workflows;
	}

	/**
	 * 
	 * @param attributes
	 */
	public void setattributess(Set<AttributesModel> attributes){
		this.attributess =attributes;
	}

	/**
	 * 
	 * @param emailtemplate
	 */
	public void setemailtemplates(Set<EmailTemplateModel> emailtemplate){
		this.emailtemplates =emailtemplate;
	}

	/**
	 * 
	 * @param entity
	 */
	public void setentity(String entity){
		this.entity = entity;
	}

	/**
	 * 
	 * @param entityschema
	 */
	public void setentityschema(String entityschema){
		this.entityschema = entityschema;
	}

	/**
	 * 
	 * @param id
	 */
	public void setId(int id){
		this.id = id;
	}

	/**
	 * 
	 * @param numbersequencerule
	 */
	public void setnumbersequencerules(Set<NumberSequenceRuleModel> numbersequencerule){
		this.numbersequencerules =numbersequencerule;
	}

	/**
	 * 
	 * @param segment
	 */
	public void setsegments(Set<SegmentModel> segment){
		this.segments =segment;
	}

	/**
	 * 
	 * @param storefield
	 */
	public void setstorefield(String storefield){
		this.storefield = storefield;
	}

	/**
	 * 
	 * @param tenantid
	 */
	public void setTenant(int tenantid){
		this.tenant=tenantid;
	}

	/**
	 * 
	 * @param textfield
	 */
	public void settextfield(String textfield){
		this.textfield = textfield;
	}

	/**
	 * 
	 * @param valuefield
	 */
	public void setvaluefield(String valuefield){
		this.valuefield = valuefield;
	}

	/**
	 * 
	 * @param workflownodecf
	 */
	public void setworkflownodecfs(Set<WorkflowNodeCFModel> workflownodecf){
		this.workflownodecfs =workflownodecf;
	}

	/**
	 * 
	 * @param workflownode
	 */
	public void setworkflownodes(Set<WorkflowNodeModel> workflownode){
		this.workflownodes =workflownode;
	}

	/**
	 * 
	 * @param workflow
	 */
	public void setworkflows(Set<WorkflowModel> workflow){
		this.workflows =workflow;
	}

	@Override
	public String toString(){
		return "EntityReferenceModel [id=" + id + ",]";
	}

}