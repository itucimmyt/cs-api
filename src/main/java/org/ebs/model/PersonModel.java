///////////////////////////////////////////////////////////
//  PersonModel.java
//  Macromedia ActionScript Implementation of the Class PersonModel
//  Generated by Enterprise Architect
//  Created on:      13-Mar-2021 12:02:44 AM
//  Original author: EBRIONES
///////////////////////////////////////////////////////////

package org.ebs.model;

import org.ebs.util.Auditable;
import javax.persistence.ManyToMany;
import lombok.Getter;
import lombok.Setter;
import javax.persistence.JoinTable;
import javax.persistence.JoinColumn;
import javax.persistence.FetchType;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;

/**
 * @author EBRIONES
 * @version 1.0
 * @created 13-Mar-2021 12:02:44 AM
 */
@Entity @Table(name="Person",schema="crm") @Getter @Setter
public class PersonModel extends Auditable {

	private static final long serialVersionUID = -206280838;
	@Column(name="familyName")
	private String familyName;
	@Column(name="givenName")
	private String givenName;
	@Column(name="additionalName")
	private String additionalName;
	@Column(name="email")
	private String email;
	@Column(name="officialEmail")
	private String officialEmail;
	@Column(name="gender")
	private String gender;
	@Column(name="hasCredential")
	private boolean hasCredential;
	@Column(name="jobTitle")
	private String jobTitle;
	@Column(name="knowsAbout")
	private String knowsAbout;
	@Column(name="phone")
	private String phone;
	@GeneratedValue(strategy= GenerationType.IDENTITY) @Id @Column
	private int id;
	@OneToMany(mappedBy = "person",fetch=FetchType.LAZY, cascade = CascadeType.ALL)
	private Set<RequestModel> requests;
	@ManyToMany(mappedBy="persons")
	private Set<AddressModel> addresss;
	@ManyToOne(fetch=FetchType.LAZY, optional =true) @JoinColumn(name="tenant_id")
	private TenantModel tenant;
	@ManyToMany(cascade =CascadeType.ALL) @JoinTable(name = "person_type", schema="crm", joinColumns  = @JoinColumn(name="person_id",referencedColumnName = "id"),inverseJoinColumns = @JoinColumn(name="type_id",referencedColumnName = "id"))
	private Set<TypeModel> types;
	@ManyToOne(fetch=FetchType.LAZY, optional =true) @JoinColumn(name="language_id")
	private LanguageModel language;
	@OneToMany(mappedBy = "person",fetch=FetchType.LAZY, cascade = CascadeType.ALL)
	private Set<EmailTemplateModel> emailtemplates;
	@OneToMany(mappedBy = "person",fetch=FetchType.LAZY, cascade = CascadeType.ALL)
	private Set<UserModel> users;
	@ManyToOne(fetch=FetchType.LAZY, optional =true) @JoinColumn(name="personstatus_id")
	private PersonStatusModel personstatus;

	@Override
	public String toString(){
		return "PersonModel [hasCredential=" + hasCredential + ",id=" + id + ",]";
	}

}