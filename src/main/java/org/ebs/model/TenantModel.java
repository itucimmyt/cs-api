///////////////////////////////////////////////////////////
//  TenantModel.java
//  Macromedia ActionScript Implementation of the Class TenantModel
//  Generated by Enterprise Architect
//  Created on:      23-Jul-2020 10:47:18 PM
//  Original author: EBRIONES
///////////////////////////////////////////////////////////

package org.ebs.model;

import javax.persistence.OneToMany;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import org.ebs.util.Auditable;
import javax.persistence.JoinColumn;
import javax.persistence.FetchType;
import java.util.Set;
import java.util.Date;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;

/**
 * @author EBRIONES
 * @version 1.0
 * @created 23-Jul-2020 10:47:18 PM
 */
@Entity @Table(name="Tenant",schema="tenant")
public class TenantModel extends Auditable {

	private static final long serialVersionUID = -257113038;
	@Column(name="name")
	private String name;
	@Column(name="expiration")
	private Date expiration;
	@Column(name="expire")
	private boolean expire;
	@GeneratedValue(strategy= GenerationType.IDENTITY) @Id @Column
	private int id;
	@OneToMany(mappedBy = "tenant",fetch=FetchType.LAZY, cascade = CascadeType.ALL)
	Set<EmailTemplateModel> emailtemplates;
	@OneToMany(mappedBy = "tenant",fetch=FetchType.LAZY, cascade = CascadeType.ALL)
	Set<ProgramModel> programs;
	@OneToMany(mappedBy = "tenant",fetch=FetchType.LAZY, cascade = CascadeType.ALL)
	Set<UserModel> users;
	@OneToMany(mappedBy = "tenant",fetch=FetchType.LAZY, cascade = CascadeType.ALL)
	Set<InstanceModel> instances;
	@OneToMany(mappedBy = "tenant",fetch=FetchType.LAZY, cascade = CascadeType.ALL)
	Set<WorkflowModel> workflows;
	@ManyToOne(fetch=FetchType.LAZY, optional =false) @JoinColumn(name="organization_id")
	OrganizationModel organization;
	@ManyToOne(fetch=FetchType.LAZY, optional =true) @JoinColumn(name="authenticationtype_id")
	AuthenticationTypeModel authenticationtype;
	@OneToMany(mappedBy = "tenant",fetch=FetchType.LAZY, cascade = CascadeType.ALL)
	Set<NumberSequenceRuleModel> numbersequencerules;
	@ManyToOne(fetch=FetchType.LAZY, optional =false) @JoinColumn(name="customer_id")
	CustomerModel customer;
	@OneToMany(mappedBy = "tenant",fetch=FetchType.LAZY, cascade = CascadeType.ALL)
	Set<PersonModel> persons;

	public AuthenticationTypeModel getauthenticationtype(){
		return authenticationtype;
	}

	public CustomerModel getcustomer(){
		return customer;
	}

	public Set<EmailTemplateModel> getemailtemplates(){
		return emailtemplates;
	}

	public Date getexpiration(){
		return expiration;
	}

	public boolean getexpire(){
		return expire;
	}

	public int getId(){
		return id;
	}

	public Set<InstanceModel> getinstances(){
		return instances;
	}

	public String getname(){
		return name;
	}

	public Set<NumberSequenceRuleModel> getnumbersequencerules(){
		return numbersequencerules;
	}

	public OrganizationModel getorganization(){
		return organization;
	}

	public Set<PersonModel> getpersons(){
		return persons;
	}

	public Set<ProgramModel> getprograms(){
		return programs;
	}

	public Set<UserModel> getusers(){
		return users;
	}

	public Set<WorkflowModel> getworkflows(){
		return workflows;
	}

	/**
	 * 
	 * @param authenticationtype
	 */
	public void setauthenticationtype(AuthenticationTypeModel authenticationtype){
		this.authenticationtype =authenticationtype;
	}

	/**
	 * 
	 * @param customer
	 */
	public void setcustomer(CustomerModel customer){
		this.customer =customer;
	}

	/**
	 * 
	 * @param emailtemplate
	 */
	public void setemailtemplates(Set<EmailTemplateModel> emailtemplate){
		this.emailtemplates =emailtemplate;
	}

	/**
	 * 
	 * @param expiration
	 */
	public void setexpiration(Date expiration){
		this.expiration = expiration;
	}

	/**
	 * 
	 * @param expire
	 */
	public void setexpire(boolean expire){
		this.expire = expire;
	}

	/**
	 * 
	 * @param id
	 */
	public void setId(int id){
		this.id = id;
	}

	/**
	 * 
	 * @param instance
	 */
	public void setinstances(Set<InstanceModel> instance){
		this.instances =instance;
	}

	/**
	 * 
	 * @param name
	 */
	public void setname(String name){
		this.name = name;
	}

	/**
	 * 
	 * @param numbersequencerule
	 */
	public void setnumbersequencerules(Set<NumberSequenceRuleModel> numbersequencerule){
		this.numbersequencerules =numbersequencerule;
	}

	/**
	 * 
	 * @param organization
	 */
	public void setorganization(OrganizationModel organization){
		this.organization =organization;
	}

	/**
	 * 
	 * @param person
	 */
	public void setpersons(Set<PersonModel> person){
		this.persons =person;
	}

	/**
	 * 
	 * @param program
	 */
	public void setprograms(Set<ProgramModel> program){
		this.programs =program;
	}

	/**
	 * 
	 * @param user
	 */
	public void setusers(Set<UserModel> user){
		this.users =user;
	}

	/**
	 * 
	 * @param workflow
	 */
	public void setworkflows(Set<WorkflowModel> workflow){
		this.workflows =workflow;
	}

	@Override
	public String toString(){
		return "TenantModel [expire=" + expire + ",id=" + id + ",]";
	}

}