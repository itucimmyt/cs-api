///////////////////////////////////////////////////////////
//  WorkflowModel.java
//  Macromedia ActionScript Implementation of the Class WorkflowModel
//  Generated by Enterprise Architect
//  Created on:      07-Sep-2020 8:12:39 AM
//  Original author: EBRIONES
///////////////////////////////////////////////////////////

package org.ebs.model;

import org.ebs.util.Auditable;
import lombok.Getter;
import lombok.Setter;
import javax.persistence.JoinColumn;
import javax.persistence.FetchType;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;

/**
 * @author EBRIONES
 * @version 1.0
 * @created 07-Sep-2020 8:12:39 AM
 */
@Entity @Table(name="Workflow",schema="workflow") @Getter @Setter
public class WorkflowModel extends Auditable {

	private static final long serialVersionUID = -52512045;
	@Column(name="title")
	private String title;
	@Column(name="name")
	private String name;
	@Column(name="description")
	private String description;
	@Column(name="help")
	private String help;
	@Column(name="sortno")
	private Integer sortno;
	@Column(name="definition")
	private String definition;
	@Column(name="icon")
	private String icon;
	@GeneratedValue(strategy= GenerationType.IDENTITY) @Id @Column
	private int id;
	@OneToMany(mappedBy = "workflow",fetch=FetchType.LAZY, cascade = CascadeType.ALL)
	private Set<WorkflowPhaseModel> workflowPhases;
	@ManyToOne(fetch=FetchType.LAZY, optional =true) @JoinColumn(name="entityReference_id")
	private EntityReferenceModel entityReference;
	@ManyToOne(fetch=FetchType.LAZY, optional =false) @JoinColumn(name="tenant_id")
	private TenantModel tenant;
	@ManyToOne(fetch=FetchType.LAZY, optional =true) @JoinColumn(name="htmlTag_id")
	private HtmlTagModel htmlTag;
	@OneToMany(mappedBy = "workflow",fetch=FetchType.LAZY, cascade = CascadeType.ALL)
	private Set<WorkflowInstanceModel> workflowInstances;
	@OneToMany(mappedBy = "workflow",fetch=FetchType.LAZY, cascade = CascadeType.ALL)
	private Set<WorkflowNodeModel> workflowNodes;
	@ManyToOne(fetch=FetchType.LAZY, optional =true) @JoinColumn(name="workflowNode_id")
	private WorkflowNodeModel workflowNode;

	@Override
	public String toString(){
		return "WorkflowModel [id=" + id + ",]";
	}

}