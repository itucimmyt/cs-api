///////////////////////////////////////////////////////////
//  WorkflowNodeModel.java
//  Macromedia ActionScript Implementation of the Class WorkflowNodeModel
//  Generated by Enterprise Architect
//  Created on:      09-Aug-2020 4:52:02 PM
//  Original author: EBRIONES
//  modified by Jorge 2020-08-19
///////////////////////////////////////////////////////////

package org.ebs.model;

import org.ebs.util.Auditable;

import lombok.Getter;
import lombok.Setter;

import javax.persistence.ManyToMany;
import javax.persistence.JoinTable;
import javax.persistence.JoinColumn;
import javax.persistence.FetchType;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;

/**
 * @author EBRIONES
 * @version 1.0
 * @created 09-Aug-2020 4:52:02 PM
	* modified by Jorge 2020-08-19
 */
@Entity @Table(name="WorkflowNode",schema="workflow")
@Getter @Setter
public class WorkflowNodeModel extends Auditable {

	private static final long serialVersionUID = -520938686;
	@Column(name="tenant_id")
	private int tenant;
	@Column(name="name")
	private String name;
	@Column(name="description")
	private String description;
	@Column(name="help")
	private String help;
	@Column(name="sequence")
	private int sequence;
	@Column(name="require_approval")
	private Boolean requireApproval;
	@GeneratedValue(strategy= GenerationType.IDENTITY) @Id @Column
	private int id;
	@ManyToMany(cascade =CascadeType.ALL) @JoinTable(name = "workflownode_workflowstage", schema="workflow", joinColumns  = @JoinColumn(name="workflownode_id",referencedColumnName = "id"),inverseJoinColumns = @JoinColumn(name="workflowstage_id",referencedColumnName = "id"))
	private Set<WorkflowStageModel> workflowstages;
	@ManyToOne(fetch=FetchType.LAZY, optional =true) @JoinColumn(name="workflow_id")
	private WorkflowModel workflow;
	@OneToMany(mappedBy = "workflownode",fetch=FetchType.LAZY, cascade = CascadeType.ALL)
	private Set<ActionModel> actions;
	@ManyToOne(fetch=FetchType.LAZY, optional =true) @JoinColumn(name="entityreference_id")
	private EntityReferenceModel entityreference;
	@OneToMany(mappedBy = "workflownode",fetch=FetchType.LAZY, cascade = CascadeType.ALL)
	private Set<WorkflowEventModel> workflowevents;
	@ManyToOne(fetch=FetchType.LAZY, optional =true) @JoinColumn(name="htmltag_id")
	private HtmlTagModel htmltag;
	@OneToMany(mappedBy = "workflownode",fetch=FetchType.LAZY, cascade = CascadeType.ALL)
	private Set<WorkflowModel> workflows;
	@ManyToOne(fetch=FetchType.LAZY, optional =true) @JoinColumn(name="module_id")
	private ModuleModel module;
	@OneToMany(mappedBy = "workflownode",fetch=FetchType.LAZY, cascade = CascadeType.ALL)
	private Set<WorkflowNodeCFModel> workflownodecfs;
	@ManyToOne(fetch=FetchType.LAZY, optional =true) @JoinColumn(name="process_id")
	private ProcessModel process;

	@Override
	public String toString(){
		return "WorkflowNodeModel [sequence=" + sequence + ",require_approval=" + requireApproval + ",id=" + id + ",]";
	}
}