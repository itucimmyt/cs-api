///////////////////////////////////////////////////////////
//  UserModel.java
//  Macromedia ActionScript Implementation of the Class UserModel
//  Generated by Enterprise Architect
//  Created on:      27-Apr-2020 9:47:56 AM
//  Original author: EBRIONES
///////////////////////////////////////////////////////////

package org.ebs.model;

import org.ebs.util.Auditable;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.FetchType;
import java.util.Set;
import java.util.Date;
import java.util.UUID;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;

/**
 * @author EBRIONES
 * @version 1.0
 * @created 27-Apr-2020 9:47:56 AM
 */


@Entity @Table(name="User",schema="tnt")
public class UserModel extends Auditable {

	@Column(name="defaultRole")
	private int defaultRole;
	@OneToMany(mappedBy = "user",fetch=FetchType.EAGER, cascade = CascadeType.ALL)
	Set<DelegationModel> Delegations;
	@GeneratedValue(strategy= GenerationType.IDENTITY) @Id @Column
	private int id;
	@Column(name="isIS")
	private int isIS;
	@Column(name="lastAccess")
	private Date lastAccess;
	@OneToMany(mappedBy = "user",fetch=FetchType.EAGER, cascade = CascadeType.ALL)
	Set<PreferenceModel> Preferences;
	@ManyToMany(cascade = CascadeType.ALL)	
	@JoinTable(name="user_role", schema = "tnt",
	 joinColumns = @JoinColumn(name="user_id",referencedColumnName = "id"),
	 inverseJoinColumns = @JoinColumn(name="role_id",referencedColumnName = "id"))
	Set<RoleModel> Roles;
	@OneToMany(mappedBy = "user",fetch=FetchType.EAGER, cascade = CascadeType.ALL)
	Set<SessionModel> Sessions;
	@ManyToOne(fetch=FetchType.EAGER, optional =false) @JoinColumn(name="tenant_id")
	TenantModel tenant;
	@Column(name="userName")
	private String userName;
	@Column(name="userPassword")
	private String userPassword;

	public int getdefaultRole(){
		return defaultRole;
	}

	public Set<DelegationModel> getDelegations(){
		return Delegations;
	}

	public int getId(){
		return id;
	}

	public int getisIS(){
		return isIS;
	}

	public Date getlastAccess(){
		return lastAccess;
	}

	public Set<PreferenceModel> getPreferences(){
		return Preferences;
	}

	public Set<RoleModel> getRoles(){
		return Roles;
	}

	public Set<SessionModel> getSessions(){
		return Sessions;
	}

	public TenantModel getTenant(){
		 return tenant;
	}

	public String getuserName(){
		return userName;
	}

	public String getuserPassword(){
		return userPassword;
	}

	/**
	 * 
	 * @param defaultrole
	 */
	public void setdefaultRole(int defaultrole){
		this.defaultRole = defaultrole;
	}

	/**
	 * 
	 * @param delegation
	 */
	public void setDelegations(Set<DelegationModel> delegation){
		this.Delegations =delegation;
	}

	/**
	 * 
	 * @param id
	 */
	public void setId(int id){
		this.id = id;
	}

	/**
	 * 
	 * @param isis
	 */
	public void setisIS(int isis){
		this.isIS = isis;
	}

	/**
	 * 
	 * @param lastaccess
	 */
	public void setlastAccess(Date lastaccess){
		this.lastAccess = lastaccess;
	}

	/**
	 * 
	 * @param preference
	 */
	public void setPreferences(Set<PreferenceModel> preference){
		this.Preferences =preference;
	}

	/**
	 * 
	 * @param role
	 */
	public void setRoles(Set<RoleModel> role){
		this.Roles =role;
	}

	/**
	 * 
	 * @param session
	 */
	public void setSessions(Set<SessionModel> session){
		this.Sessions =session;
	}

	/**
	 * 
	 * @param tenant
	 */
	public void setTenant(TenantModel tenant){
		this.tenant = tenant;
	}

	/**
	 * 
	 * @param username
	 */
	public void setuserName(String username){
		this.userName = username;
	}

	/**
	 * 
	 * @param userpassword
	 */
	public void setuserPassword(String userpassword){
		this.userPassword = userpassword;
	}

}