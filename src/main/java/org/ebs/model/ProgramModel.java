///////////////////////////////////////////////////////////
//  ProgramModel.java
//  Macromedia ActionScript Implementation of the Class ProgramModel
//  Generated by Enterprise Architect
//  Created on:      02-May-2021 6:19:59 AM
//  Original author: EBRIONES
///////////////////////////////////////////////////////////

package org.ebs.model;

import org.ebs.util.Auditable;
import lombok.Getter;
import lombok.Setter;
import javax.persistence.JoinColumn;
import javax.persistence.FetchType;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;

/**
 * @author EBRIONES
 * @version 1.0
 * @created 02-May-2021 6:19:59 AM
 */
@Entity @Table(name="program",schema="program") @Getter @Setter
public class ProgramModel extends Auditable {

	private static final long serialVersionUID = -16371923;
	@Column(name="code")
	private String code;
	@Column(name="name")
	private String name;
	@Column(name="type")
	private String type;
	@Column(name="status")
	private String status;
	@Column(name="description")
	private String description;
	@Column(name="notes")
	private String notes;
	@GeneratedValue(strategy= GenerationType.IDENTITY) @Id @Column
	private int id;
	@ManyToOne(fetch=FetchType.LAZY, optional =true) @JoinColumn(name="user_id")
	private UserModel user;
	@ManyToOne(fetch=FetchType.LAZY, optional =false) @JoinColumn(name="crop_id")
	private CropModel crop;
	@OneToMany(mappedBy = "program",fetch=FetchType.LAZY, cascade = CascadeType.ALL)
	private Set<ProjectModel> projects;
	@ManyToOne(fetch=FetchType.LAZY, optional =true) @JoinColumn(name="tenant_id")
	private TenantModel tenant;
	@OneToMany(mappedBy = "program",fetch=FetchType.LAZY, cascade = CascadeType.ALL)
	private Set<FunctionalUnitModel> functionalunits;

	@Override
	public String toString(){
		return "ProgramModel [id=" + id + ",]";
	}

}