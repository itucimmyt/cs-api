///////////////////////////////////////////////////////////
//  ServiceModel.java
//  Macromedia ActionScript Implementation of the Class ServiceModel
//  Generated by Enterprise Architect
//  Created on:      10-Sep-2020 10:44:33 PM
//  Original author: EBRIONES
///////////////////////////////////////////////////////////

package org.ebs.model;

import org.ebs.util.Auditable;
import javax.persistence.ManyToMany;
import lombok.Getter;
import lombok.Setter;
import javax.persistence.JoinTable;
import javax.persistence.JoinColumn;
import javax.persistence.FetchType;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;

/**
 * @author EBRIONES
 * @version 1.0
 * @created 10-Sep-2020 10:44:33 PM
 */
@Entity @Table(name="Service",schema="analyticalsampling") @Getter @Setter
public class ServiceModel extends Auditable {

	private static final long serialVersionUID = 236769310;
	@Column(name="tenant_id")
	private int tenant;
	@Column(name="name")
	private String name;
	@Column(name="description")
	private String description;
	@Column(name="code")
	private String code;
	@GeneratedValue(strategy= GenerationType.IDENTITY) @Id @Column
	private int id;
	@ManyToOne(fetch=FetchType.LAZY, optional =true) @JoinColumn(name="purpose_id")
	private PurposeModel purpose;
	@OneToMany(mappedBy = "service",fetch=FetchType.LAZY, cascade = CascadeType.ALL)
	private Set<AssayclassModel> assayclasss;
	@ManyToMany(cascade =CascadeType.ALL) @JoinTable(name = "service_vendor", schema="analyticalsampling", joinColumns  = @JoinColumn(name="service_id",referencedColumnName = "id"),inverseJoinColumns = @JoinColumn(name="vendor_id",referencedColumnName = "id"))
	private Set<VendorModel> vendors;

	@Override
	public String toString(){
		return "ServiceModel [id=" + id + ",]";
	}

}