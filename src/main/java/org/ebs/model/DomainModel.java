///////////////////////////////////////////////////////////
//  DomainModel.java
//  Macromedia ActionScript Implementation of the Class DomainModel
//  Generated by Enterprise Architect
//  Created on:      02-May-2021 6:19:46 AM
//  Original author: EBRIONES
///////////////////////////////////////////////////////////

package org.ebs.model;

import org.ebs.util.Auditable;
import javax.persistence.ManyToMany;
import lombok.Getter;
import lombok.Setter;
import javax.persistence.JoinTable;
import javax.persistence.JoinColumn;
import javax.persistence.FetchType;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;

/**
 * @author EBRIONES
 * @version 1.0
 * @created 02-May-2021 6:19:46 AM
 */
@Entity @Table(name="domain",schema="core") @Getter @Setter
public class DomainModel extends Auditable {

	private static final long serialVersionUID = 214681554;
	@Column(name="name")
	private String name;
	@Column(name="info")
	private String info;
	@Column(name="icon")
	private String icon;
	@GeneratedValue(strategy= GenerationType.IDENTITY) @Id @Column
	private int id;
	@ManyToMany(cascade =CascadeType.ALL) @JoinTable(name = "domain_entityreference", schema="core", joinColumns  = @JoinColumn(name="domain_id",referencedColumnName = "id"),inverseJoinColumns = @JoinColumn(name="entityreference_id",referencedColumnName = "id"))
	private Set<EntityReferenceModel> entityreferences;
	@ManyToOne(fetch=FetchType.LAZY, optional =true) @JoinColumn(name="htmltag_id")
	private HtmlTagModel htmltag;
	@OneToMany(mappedBy = "domain",fetch=FetchType.LAZY, cascade = CascadeType.ALL)
	private Set<DomainInstanceModel> domaininstances;
	@OneToMany(mappedBy = "domain",fetch=FetchType.LAZY, cascade = CascadeType.ALL)
	private Set<ProductModel> products;

	@Override
	public String toString(){
		return "DomainModel [id=" + id + ",]";
	}

}