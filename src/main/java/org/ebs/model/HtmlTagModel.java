///////////////////////////////////////////////////////////
//  HtmlTagModel.java
//  Macromedia ActionScript Implementation of the Class HtmlTagModel
//  Generated by Enterprise Architect
//  Created on:      10-Sep-2020 10:43:46 PM
//  Original author: EBRIONES
///////////////////////////////////////////////////////////

package org.ebs.model;

import org.ebs.util.Auditable;
import lombok.Getter;
import lombok.Setter;
import javax.persistence.FetchType;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;

/**
 * @author EBRIONES
 * @version 1.0
 * @created 10-Sep-2020 10:43:46 PM
 */
@Entity @Table(name="HtmlTag",schema="tenant") @Getter @Setter
public class HtmlTagModel extends Auditable {

	private static final long serialVersionUID = 359673083;
	@Column(name="tagName")
	private String tagName;
	@GeneratedValue(strategy= GenerationType.IDENTITY) @Id @Column
	private int id;
	@OneToMany(mappedBy = "htmltag",fetch=FetchType.LAZY, cascade = CascadeType.ALL)
	private Set<AttributesModel> attributess;
	@OneToMany(mappedBy = "htmltag",fetch=FetchType.LAZY, cascade = CascadeType.ALL)
	private Set<NotificationModel> notifications;
	@OneToMany(mappedBy = "htmltag",fetch=FetchType.LAZY, cascade = CascadeType.ALL)
	private Set<ComponentModel> components;
	@OneToMany(mappedBy = "htmltag",fetch=FetchType.LAZY, cascade = CascadeType.ALL)
	private Set<WorkflowModel> workflows;
	@OneToMany(mappedBy = "htmltag",fetch=FetchType.LAZY, cascade = CascadeType.ALL)
	private Set<WorkflowPhaseModel> workflowphases;
	@OneToMany(mappedBy = "htmltag",fetch=FetchType.LAZY, cascade = CascadeType.ALL)
	private Set<AlertModel> alerts;
	@OneToMany(mappedBy = "htmltag",fetch=FetchType.LAZY, cascade = CascadeType.ALL)
	private Set<WorkflowStageModel> workflowstages;
	@OneToMany(mappedBy = "htmltag",fetch=FetchType.LAZY, cascade = CascadeType.ALL)
	private Set<TranslationModel> translations;
	@OneToMany(mappedBy = "htmltag",fetch=FetchType.LAZY, cascade = CascadeType.ALL)
	private Set<WorkflowNodeModel> workflownodes;
	@OneToMany(mappedBy = "htmltag",fetch=FetchType.LAZY, cascade = CascadeType.ALL)
	private Set<ModuleModel> modules;
	@OneToMany(mappedBy = "htmltag",fetch=FetchType.LAZY, cascade = CascadeType.ALL)
	private Set<WorkflowNodeCFModel> workflownodecfs;

	@Override
	public String toString(){
		return "HtmlTagModel [id=" + id + ",]";
	}

}