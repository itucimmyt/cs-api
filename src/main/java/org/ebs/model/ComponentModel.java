///////////////////////////////////////////////////////////
//  ComponentModel.java
//  Macromedia ActionScript Implementation of the Class ComponentModel
//  Generated by Enterprise Architect
//  Created on:      04-Sep-2020 10:04:50 AM
//  Original author: EBRIONES
///////////////////////////////////////////////////////////

package org.ebs.model;

import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import org.ebs.util.Auditable;
import javax.persistence.ManyToMany;
import lombok.Getter;
import lombok.Setter;
import javax.persistence.JoinTable;
import javax.persistence.JoinColumn;
import javax.persistence.FetchType;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;

/**
 * @author EBRIONES
 * @version 1.0
 * @created 04-Sep-2020 10:04:50 AM
 */
@Entity @Table(name="Component",schema="tenant") @Getter @Setter
public class ComponentModel extends Auditable {

	private static final long serialVersionUID = 334968824;
	@Column(name="name")
	private String name;
	@Column(name="version")
	private String version;
	@Column(name="releaseNo")
	private String releaseno;
	@Column(name="info")
	private String info;
	@Column(name="icon")
	private String icon;
	@GeneratedValue(strategy= GenerationType.IDENTITY) @Id @Column
	private int id;
	@ManyToMany(cascade =CascadeType.ALL) @JoinTable(name = "component_instance", schema="tenant", joinColumns  = @JoinColumn(name="component_id",referencedColumnName = "id"),inverseJoinColumns = @JoinColumn(name="instance_id",referencedColumnName = "id"))
	private Set<InstanceModel> instances;
	@ManyToOne(fetch=FetchType.LAZY, optional =true) @JoinColumn(name="htmltag_id")
	private HtmlTagModel htmltag;
	@OneToMany(mappedBy = "component",fetch=FetchType.LAZY, cascade = CascadeType.ALL)
	private Set<ModuleModel> modules;

	@Override
	public String toString(){
		return "ComponentModel [id=" + id + ",]";
	}

}