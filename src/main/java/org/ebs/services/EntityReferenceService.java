///////////////////////////////////////////////////////////
//  EntityReferenceService.java
//  Macromedia ActionScript Implementation of the Interface EntityReferenceService
//  Generated by Enterprise Architect
//  Created on:      20-Aug-2020 1:05:44 PM
//  Original author: EBRIONES
///////////////////////////////////////////////////////////

package org.ebs.services;

import org.springframework.data.domain.Page;
import java.util.Set;
import java.util.List;
import java.util.Optional;
import org.ebs.util.FilterInput;
import org.ebs.util.PageInput;
import org.ebs.util.SortInput;
import org.ebs.services.to.EntityReferenceTo;
import org.ebs.services.to.Input.EntityReferenceInput;
import org.ebs.services.to.AttributesTo;
import org.ebs.services.to.EmailTemplateTo;
import org.ebs.services.to.WorkflowTo;
import org.ebs.services.to.SegmentTo;
import org.ebs.services.to.WorkflowNodeTo;
import org.ebs.services.to.NumberSequenceRuleTo;
import org.ebs.services.to.WorkflowNodeCFTo;

/**
 * @author EBRIONES
 * @version 1.0
 * @created 20-Aug-2020 1:05:44 PM
 */
public interface EntityReferenceService {

	/**
	 * 
	 * @param EntityReference
	 */
	public EntityReferenceTo createEntityReference(EntityReferenceInput EntityReference);

	/**
	 * 
	 * @param entityreferenceId
	 */
	public int deleteEntityReference(int entityreferenceId);

	/**
	 * 
	 * @param entityreferenceId
	 */
	public Set<AttributesTo> findAttributess(int entityreferenceId);

	/**
	 * 
	 * @param entityreferenceId
	 */
	public Set<EmailTemplateTo> findEmailTemplates(int entityreferenceId);

	/**
	 * 
	 * @param entityreferenceId
	 */
	public Optional<EntityReferenceTo> findEntityReference(int entityreferenceId);

	/**
	 * 
	 * @param page
	 * @param sort
	 * @param filters
	 */
	public Page<EntityReferenceTo> findEntityReferences(PageInput page, SortInput sort, List<FilterInput> filters);

	/**
	 * 
	 * @param entityreferenceId
	 */
	public Set<NumberSequenceRuleTo> findNumberSequenceRules(int entityreferenceId);

	/**
	 * 
	 * @param entityreferenceId
	 */
	public Set<SegmentTo> findSegments(int entityreferenceId);

	/**
	 * 
	 * @param entityreferenceId
	 */
	public Set<WorkflowNodeCFTo> findWorkflowNodeCFs(int entityreferenceId);

	/**
	 * 
	 * @param entityreferenceId
	 */
	public Set<WorkflowNodeTo> findWorkflowNodes(int entityreferenceId);

	/**
	 * 
	 * @param entityreferenceId
	 */
	public Set<WorkflowTo> findWorkflows(int entityreferenceId);

	/**
	 * 
	 * @param entityreference
	 */
	public EntityReferenceTo modifyEntityReference(EntityReferenceInput entityreference);

}