///////////////////////////////////////////////////////////
//  ServiceProviderConverterInput.java
//  Macromedia ActionScript Implementation of the Class ServiceProviderConverterInput
//  Generated by Enterprise Architect
//  Created on:      17-May-2020 3:10:15 PM
//  Original author: EBRIONES
///////////////////////////////////////////////////////////

package org.ebs.services.converter;

import java.util.stream.Collectors;

import org.ebs.model.CropModel;
import org.ebs.model.ServiceProviderModel;
import org.ebs.services.to.Input.ServiceProviderInput;
import org.springframework.beans.BeanUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.core.convert.ConversionService;
import org.springframework.core.convert.converter.Converter;
import org.springframework.stereotype.Component;

/**
 * @author EBRIONES
 * @version 1.0
 * @created 17-May-2020 3:10:15 PM
 */
@Component
public class ServiceProviderConverterInput implements Converter<ServiceProviderInput,ServiceProviderModel> {


	@Autowired
	private ConversionService converter;
	
	private CountryConverterInput countryConverterInput;
	/**
	 * 
	 * @param source
	 */
	@Override
	public ServiceProviderModel convert(ServiceProviderInput source){
		ServiceProviderModel target = new  ServiceProviderModel(); 
		BeanUtils.copyProperties(source, target);
		target.setCrop(source.getCrop().stream().map( e -> converter.convert(e,CropModel.class)).collect(Collectors.toSet()));
		target.setCountry(countryConverterInput.convert(source.getCountry()));
		return target;
	}

	@Autowired
	public ServiceProviderConverterInput (CountryConverterInput _countryConverterInput) {
		this.countryConverterInput = _countryConverterInput;
	}
}