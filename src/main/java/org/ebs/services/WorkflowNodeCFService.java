///////////////////////////////////////////////////////////
//  WorkflowNodeCFService.java
//  Macromedia ActionScript Implementation of the Interface WorkflowNodeCFService
//  Generated by Enterprise Architect
//  Created on:      07-Sep-2020 8:12:40 AM
//  Original author: EBRIONES
///////////////////////////////////////////////////////////

package org.ebs.services;

import java.util.List;
import java.util.Optional;
import org.ebs.util.FilterInput;
import org.ebs.util.PageInput;
import org.ebs.util.SortInput;
import org.springframework.data.domain.Page;
import java.util.Set;
import org.ebs.services.to.WorkflowNodeCFTo;
import org.ebs.services.to.Input.WorkflowNodeCFInput;
import org.ebs.services.to.WorkflowCFValueTo;
import org.ebs.services.to.WorkflowCFTypeTo;
import org.ebs.services.to.HtmlTagTo;
import org.ebs.services.to.EntityReferenceTo;
import org.ebs.services.to.WorkflowNodeTo;

/**
 * @author EBRIONES
 * @version 1.0
 * @created 07-Sep-2020 8:12:40 AM
 */
public interface WorkflowNodeCFService {

	/**
	 * 
	 * @param WorkflowNodeCF
	 */
	public WorkflowNodeCFTo createWorkflowNodeCF(WorkflowNodeCFInput WorkflowNodeCF);

	/**
	 * 
	 * @param workflowNodeCFId
	 */
	public int deleteWorkflowNodeCF(int workflowNodeCFId);

	/**
	 * 
	 * @param workflowNodeCFId
	 */
	public Optional<EntityReferenceTo> findEntityReference(int workflowNodeCFId);

	/**
	 * 
	 * @param workflowNodeCFId
	 */
	public Optional<HtmlTagTo> findHtmlTag(int workflowNodeCFId);

	/**
	 * 
	 * @param workflowNodeCFId
	 */
	public Optional<WorkflowCFTypeTo> findWorkflowCFType(int workflowNodeCFId);

	/**
	 * 
	 * @param workflowNodeCFId
	 */
	public Set<WorkflowCFValueTo> findWorkflowCFValues(int workflowNodeCFId);

	/**
	 * 
	 * @param workflowNodeCFId
	 */
	public Optional<WorkflowNodeTo> findWorkflowNode(int workflowNodeCFId);

	/**
	 * 
	 * @param workflowNodeCFId
	 */
	public Optional<WorkflowNodeCFTo> findWorkflowNodeCF(int workflowNodeCFId);

	/**
	 * 
	 * @param page
	 * @param sort
	 * @param filters
	 */
	public Page<WorkflowNodeCFTo> findWorkflowNodeCFs(PageInput page, SortInput sort, List<FilterInput> filters);

	/**
	 * 
	 * @param workflowNodeCF
	 */
	public WorkflowNodeCFTo modifyWorkflowNodeCF(WorkflowNodeCFInput workflowNodeCF);

}