///////////////////////////////////////////////////////////
//  WorkflowNodeCFService.java
//  Macromedia ActionScript Implementation of the Interface WorkflowNodeCFService
//  Generated by Enterprise Architect
//  Created on:      04-Sep-2020 10:06:39 AM
//  Original author: EBRIONES
///////////////////////////////////////////////////////////

package org.ebs.services;

import java.util.List;
import java.util.Optional;
import org.ebs.util.FilterInput;
import org.ebs.util.PageInput;
import org.ebs.util.SortInput;
import org.springframework.data.domain.Page;
import java.util.Set;
import org.ebs.services.to.WorkflowNodeCFTo;
import org.ebs.services.to.Input.WorkflowNodeCFInput;
import org.ebs.services.to.WorkflowCFTypeTo;
import org.ebs.services.to.HtmlTagTo;
import org.ebs.services.to.EntityReferenceTo;
import org.ebs.services.to.WorkflowNodeTo;
import org.ebs.services.to.WorkflowCFValueTo;

/**
 * @author EBRIONES
 * @version 1.0
 * @created 04-Sep-2020 10:06:39 AM
 */
public interface WorkflowNodeCFService {

	/**
	 *
	 * @param WorkflowNodeCF
	 */
	public WorkflowNodeCFTo createworkflownodecf(WorkflowNodeCFInput WorkflowNodeCF);

	/**
	 *
	 * @param workflownodecfId
	 */
	public int deleteworkflownodecf(int workflownodecfId);

	/**
	 *
	 * @param workflownodecfId
	 */
	public Optional<EntityReferenceTo> findentityreference(int workflownodecfId);

	/**
	 *
	 * @param workflownodecfId
	 */
	public Optional<HtmlTagTo> findhtmltag(int workflownodecfId);

	/**
	 *
	 * @param workflownodecfId
	 */
	public Optional<WorkflowCFTypeTo> findworkflowcftype(int workflownodecfId);

	/**
	 *
	 * @param workflownodecfId
	 */
	public Set<WorkflowCFValueTo> findworkflowcfvalues(int workflownodecfId);

	/**
	 *
	 * @param workflownodecfId
	 */
	public Optional<WorkflowNodeTo> findworkflownode(int workflownodecfId);

	/**
	 *
	 * @param workflownodecfId
	 */
	public Optional<WorkflowNodeCFTo> findworkflownodecf(int workflownodecfId);

	/**
	 *
	 * @param page
	 * @param sort
	 * @param filters
	 */
	public Page<WorkflowNodeCFTo> findworkflownodecfs(PageInput page, SortInput sort, List<FilterInput> filters, boolean disjunctionFilters);

	/**
	 *
	 * @param workflownodecf
	 */
	public WorkflowNodeCFTo modifyworkflownodecf(WorkflowNodeCFInput workflownodecf);

}