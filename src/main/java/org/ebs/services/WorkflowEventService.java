///////////////////////////////////////////////////////////
//  WorkflowEventService.java
//  Macromedia ActionScript Implementation of the Interface WorkflowEventService
//  Generated by Enterprise Architect
//  Created on:      10-Sep-2020 12:20:45 AM
//  Original author: EBRIONES
///////////////////////////////////////////////////////////

package org.ebs.services;

import java.util.List;
import java.util.Optional;
import org.ebs.util.FilterInput;
import org.ebs.util.PageInput;
import org.ebs.util.SortInput;
import org.springframework.data.domain.Page;
import org.ebs.services.to.WorkflowEventTo;
import org.ebs.services.to.Input.WorkflowEventInput;
import org.ebs.services.to.WorkflowStageTo;
import org.ebs.services.to.WorkflowInstanceTo;
import org.ebs.services.to.WorkflowNodeTo;

/**
 * @author EBRIONES
 * @version 1.0
 * @created 10-Sep-2020 12:20:45 AM
 */
public interface WorkflowEventService {

	/**
	 * 
	 * @param WorkflowEvent
	 */
	public WorkflowEventTo createWorkflowEvent(WorkflowEventInput WorkflowEvent);

	/**
	 * 
	 * @param workflowEventId
	 */
	public int deleteWorkflowEvent(int workflowEventId);

	/**
	 * 
	 * @param workflowEventId
	 */
	public Optional<WorkflowEventTo> findWorkflowEvent(int workflowEventId);

	/**
	 * 
	 * @param page
	 * @param sort
	 * @param filters
	 */
	public Page<WorkflowEventTo> findWorkflowEvents(PageInput page, SortInput sort, List<FilterInput> filters);

	/**
	 * 
	 * @param workfloweventId
	 */
	public Optional<WorkflowInstanceTo> findWorkflowInstance(int workfloweventId);

	/**
	 * 
	 * @param workfloweventId
	 */
	public Optional<WorkflowNodeTo> findWorkflowNode(int workfloweventId);

	/**
	 * 
	 * @param workfloweventId
	 */
	public Optional<WorkflowStageTo> findWorkflowStage(int workfloweventId);

	/**
	 * 
	 * @param workflowEvent
	 */
	public WorkflowEventTo modifyWorkflowEvent(WorkflowEventInput workflowEvent);

}