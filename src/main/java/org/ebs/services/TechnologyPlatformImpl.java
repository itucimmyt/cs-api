///////////////////////////////////////////////////////////
//  TechnologyPlatformImpl.java
//  Macromedia ActionScript Implementation of the Class TechnologyPlatformImpl
//  Generated by Enterprise Architect
//  Created on:      17-May-2020 3:10:23 PM
//  Original author: EBRIONES
///////////////////////////////////////////////////////////

package org.ebs.services;

import java.util.List;
import java.util.Optional;

import org.ebs.model.TechnologyPlatformModel;
import org.ebs.model.repos.TechnologyPlatformRepository;
import org.ebs.services.to.TechnologyPlatformTo;
import org.ebs.services.to.Input.TechnologyPlatformInput;
import org.ebs.util.FilterInput;
import org.ebs.util.PageInput;
import org.ebs.util.SortInput;
import org.ebs.util.Utils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.core.convert.ConversionService;
import org.springframework.data.domain.Page;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

/**
 * @author EBRIONES
 * @version 1.0
 * @created 17-May-2020 3:10:23 PM
 */
@Service @Transactional(readOnly = true)
public class TechnologyPlatformImpl implements TechnologyPlatformService {

	private TechnologyPlatformRepository technologyplatformRepository;
	@Autowired
	private ConversionService converter;

	/**
	 * 
	 * @param TechnologyPlatform
	 */
	@Override @Transactional(readOnly = false)
	public TechnologyPlatformTo createTechnologyPlatform(TechnologyPlatformInput TechnologyPlatform){
		TechnologyPlatformModel model = converter.convert(TechnologyPlatform,TechnologyPlatformModel.class); 
		 model.setId(0);
		  
		 model= technologyplatformRepository.save(model); 
		 return converter.convert(model, TechnologyPlatformTo.class); 
	}

	/**
	 * 
	 * @param idtechnologyplatform
	 */
	@Override @Transactional(readOnly = false)
	public int deleteTechnologyPlatform(int idtechnologyplatform){
		TechnologyPlatformModel technologyplatform = technologyplatformRepository.findById(idtechnologyplatform).orElseThrow(() -> new RuntimeException("Request not found")); 
		 technologyplatform.setDeleted(true); 
		  technologyplatformRepository.save(technologyplatform); 
		 return idtechnologyplatform;
	}

	/**
	 * 
	 * @param technologyplatformId
	 */
	@Override
	public Optional<TechnologyPlatformTo> findTechnologyPlatform(int technologyplatformId){
		if(technologyplatformId <1) 
		 {return Optional.empty();} 
		 return technologyplatformRepository.findById(technologyplatformId).filter(r -> !r.getDeleted().booleanValue()).map(r -> converter.convert(r,TechnologyPlatformTo.class));
	}

	/**
	 * 
	 * @param page
	 * @param sort
	 * @param filters
	 */
	@Override
	public Page<TechnologyPlatformTo> findTechnologyPlatforms(PageInput page, SortInput sort, List<FilterInput> filters){
		return technologyplatformRepository.findByCriteria(TechnologyPlatformModel.class,filters,sort,page).map(r -> converter.convert(r,TechnologyPlatformTo.class));
	}

	/**
	 * 
	 * @param technologyplatform
	 */
	@Override @Transactional(readOnly = false)
	public TechnologyPlatformTo modifyTechnologyPlatform(TechnologyPlatformInput technologyplatform){
		TechnologyPlatformModel target= technologyplatformRepository.findById(technologyplatform.getId()).orElseThrow(() -> new RuntimeException("Request not found")); 
		 TechnologyPlatformModel source= converter.convert(technologyplatform,TechnologyPlatformModel.class); 
		 Utils.copyNotNulls(source,target); 
		 return converter.convert(technologyplatformRepository.save(target), TechnologyPlatformTo.class);
	}

	/**
	 * 
	 * @param technologyplatformRepository
	 */
	@Autowired
	public TechnologyPlatformImpl(TechnologyPlatformRepository technologyplatformRepository){
		this.technologyplatformRepository =technologyplatformRepository;
	}

}