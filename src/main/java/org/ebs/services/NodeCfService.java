///////////////////////////////////////////////////////////
//  NodeCfService.java
//  Macromedia ActionScript Implementation of the Interface NodeCfService
//  Generated by Enterprise Architect
//  Created on:      13-Mar-2021 12:02:37 AM
//  Original author: EBRIONES
///////////////////////////////////////////////////////////

package org.ebs.services;

import java.util.List;
import java.util.Optional;
import org.ebs.util.FilterInput;
import org.ebs.util.PageInput;
import org.ebs.util.SortInput;
import org.springframework.data.domain.Page;
import java.util.Set;
import org.ebs.services.to.NodeCfTo;
import org.ebs.services.to.Input.NodeCfInput;
import org.ebs.services.to.CfValueTo;
import org.ebs.services.to.CfTypeTo;
import org.ebs.services.to.HtmlTagTo;
import org.ebs.services.to.EntityReferenceTo;
import org.ebs.services.to.NodeTo;

/**
 * @author EBRIONES
 * @version 1.0
 * @created 13-Mar-2021 12:02:37 AM
 */
public interface NodeCfService {

	/**
	 * 
	 * @param NodeCf
	 */
	public NodeCfTo createNodeCf(NodeCfInput NodeCf);

	/**
	 * 
	 * @param nodeCfId
	 */
	public int deleteNodeCf(int nodeCfId);

	/**
	 * 
	 * @param nodecfId
	 */
	public Optional<CfTypeTo> findCfType(int nodecfId);

	/**
	 * 
	 * @param nodecfId
	 */
	public Set<CfValueTo> findCfValues(int nodecfId);

	/**
	 * 
	 * @param nodecfId
	 */
	public Optional<EntityReferenceTo> findEntityReference(int nodecfId);

	/**
	 * 
	 * @param nodecfId
	 */
	public Optional<HtmlTagTo> findHtmlTag(int nodecfId);

	/**
	 * 
	 * @param nodecfId
	 */
	public Optional<NodeTo> findNode(int nodecfId);

	/**
	 * 
	 * @param nodeCfId
	 */
	public Optional<NodeCfTo> findNodeCf(int nodeCfId);

	/**
	 * 
	 * @param page
	 * @param sort
	 * @param filters
	 */
	public Page<NodeCfTo> findNodeCfs(PageInput page, SortInput sort, List<FilterInput> filters);

	/**
	 * 
	 * @param nodeCf
	 */
	public NodeCfTo modifyNodeCf(NodeCfInput nodeCf);

}